

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 17:25:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F25K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  0011F0                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _sent
    58  0011F0  11                 	db	17
    59  0000                     _ANSELA	set	3931
    60  0000                     _ADRESL	set	4035
    61  0000                     _ADRESH	set	4036
    62  0000                     _SSPCON1bits	set	4038
    63  0000                     _SSPSTATbits	set	4039
    64  0000                     _SSPBUF	set	4041
    65  0000                     _PIR1bits	set	3998
    66  0000                     _ADCON2	set	4032
    67  0000                     _ADCON0	set	4034
    68  0000                     _LATCbits	set	3979
    69  0000                     _PIE1bits	set	3997
    70  0000                     _SSPCON2	set	4037
    71  0000                     _SSPSTAT	set	4039
    72  0000                     _SSPCON1	set	4038
    73  0000                     _SSPADD	set	4040
    74  0000                     _TRISBbits	set	3987
    75  0000                     _TRISC	set	3988
    76  0000                     _LATC	set	3979
    77  0000                     _TRISB	set	3987
    78  0000                     _CM1CON0	set	3992
    79  0000                     _ADCON1	set	4033
    80  0000                     _TRISA	set	3986
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _LATA	set	3977
    83  0000                     _LATB	set	3978
    84  0000                     _INTCONbits	set	4082
    85                           
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89  0011AE                     __pcinit:
    90                           	opt callstack 0
    91  0011AE                     start_initialization:
    92                           	opt callstack 0
    93  0011AE                     __initialization:
    94                           	opt callstack 0
    95                           
    96                           ; Initialize objects allocated to COMRAM (1 bytes)
    97                           ; load TBLPTR registers with __pidataCOMRAM
    98  0011AE  0EF0               	movlw	low __pidataCOMRAM
    99  0011B0  6EF6               	movwf	tblptrl,c
   100  0011B2  0E11               	movlw	high __pidataCOMRAM
   101  0011B4  6EF7               	movwf	tblptrh,c
   102  0011B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   103  0011B8  6EF8               	movwf	tblptru,c
   104  0011BA  0009               	tblrd		*+	;fetch initializer
   105  0011BC  CFF5 F020          	movff	tablat,__pdataCOMRAM
   106                           
   107                           ; Clear objects allocated to COMRAM (27 bytes)
   108  0011C0  EE00  F001         	lfsr	0,__pbssCOMRAM
   109  0011C4  0E1B               	movlw	27
   110  0011C6                     clear_0:
   111  0011C6  6AEE               	clrf	postinc0,c
   112  0011C8  06E8               	decf	wreg,f,c
   113  0011CA  E1FD               	bnz	clear_0
   114  0011CC                     end_of_initialization:
   115                           	opt callstack 0
   116  0011CC                     __end_of__initialization:
   117                           	opt callstack 0
   118  0011CC  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  0011CE  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  0011D0  0100               	movlb	0
   121  0011D2  EFAC  F008         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  000001                     __pbssCOMRAM:
   125                           	opt callstack 0
   126  000001                     _Rxbuf:
   127                           	opt callstack 0
   128  000001                     	ds	11
   129  00000C                     _Txbuf:
   130                           	opt callstack 0
   131  00000C                     	ds	11
   132  000017                     _I2Cstatus:
   133                           	opt callstack 0
   134  000017                     	ds	1
   135  000018                     _RxStatus:
   136                           	opt callstack 0
   137  000018                     	ds	1
   138  000019                     _data_past:
   139                           	opt callstack 0
   140  000019                     	ds	1
   141  00001A                     _addr:
   142                           	opt callstack 0
   143  00001A                     	ds	1
   144  00001B                     _data:
   145                           	opt callstack 0
   146  00001B                     	ds	1
   147                           
   148                           	psect	dataCOMRAM
   149  000020                     __pdataCOMRAM:
   150                           	opt callstack 0
   151  000020                     _sent:
   152                           	opt callstack 0
   153  000020                     	ds	1
   154                           
   155                           	psect	cstackCOMRAM
   156  00001C                     __pcstackCOMRAM:
   157                           	opt callstack 0
   158  00001C                     ??_high_ISR:
   159                           
   160                           ; 1 bytes @ 0x0
   161  00001C                     	ds	4
   162  000020                     
   163                           ; 1 bytes @ 0x4
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 54 in file "I2C_slave.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   183 ;;      Params:         0       0       0       0       0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0       0       0
   185 ;;      Temps:          0       0       0       0       0       0       0       0       0
   186 ;;      Totals:         0       0       0       0       0       0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels required when called:    2
   189 ;; This function calls:
   190 ;;		_init_Chip
   191 ;;		_init_I2C
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  001158                     __ptext0:
   199                           	opt callstack 0
   200  001158                     _main:
   201                           	opt callstack 29
   202  001158                     
   203                           ;I2C_slave.c: 56:     init_Chip();
   204  001158  ECC2  F008         	call	_init_Chip	;wreg free
   205                           
   206                           ;I2C_slave.c: 57:     init_I2C();
   207  00115C  ECEB  F008         	call	_init_I2C	;wreg free
   208  001160                     
   209                           ;I2C_slave.c: 61:     Txbuf.idx = 0;
   210  001160  0E00               	movlw	0
   211  001162  6E16               	movwf	(_Txbuf+10)^0,c
   212  001164                     
   213                           ;I2C_slave.c: 62:     Rxbuf.idx = 0;
   214  001164  0E00               	movlw	0
   215  001166  6E0B               	movwf	(_Rxbuf+10)^0,c
   216  001168                     
   217                           ;I2C_slave.c: 64:     INTCONbits.GIE = 1;
   218  001168  8EF2               	bsf	242,7,c	;volatile
   219  00116A                     
   220                           ;I2C_slave.c: 65:     LATB = 0;
   221  00116A  0E00               	movlw	0
   222  00116C  6E8A               	movwf	138,c	;volatile
   223  00116E                     
   224                           ;I2C_slave.c: 66:     LATA = 0;
   225  00116E  0E00               	movlw	0
   226  001170  6E89               	movwf	137,c	;volatile
   227  001172                     l810:
   228                           
   229                           ;I2C_slave.c: 68:     {;I2C_slave.c: 69:         _delay((unsigned long)((100)*(48000000/
      +                          4000000.0)));
   230  001172  0EF0               	movlw	240
   231  001174                     u117:
   232  001174  D000               	nop2	
   233  001176  2EE8               	decfsz	wreg,f,c
   234  001178  D7FD               	bra	u117
   235  00117A                     
   236                           ;I2C_slave.c: 70:         ADCON0bits.GODONE = 1;
   237  00117A  82C2               	bsf	194,1,c	;volatile
   238  00117C  EFB9  F008         	goto	l810
   239  001180  EFAA  F008         	goto	start
   240  001184                     __end_of_main:
   241                           	opt callstack 0
   242                           
   243 ;; *************** function _init_I2C *****************
   244 ;; Defined at:
   245 ;;		line 88 in file "I2C_slave.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   259 ;;      Params:         0       0       0       0       0       0       0       0       0
   260 ;;      Locals:         0       0       0       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0
   262 ;;      Totals:         0       0       0       0       0       0       0       0       0
   263 ;;Total ram usage:        0 bytes
   264 ;; Hardware stack levels used:    1
   265 ;; Hardware stack levels required when called:    1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text1
   274  0011D6                     __ptext1:
   275                           	opt callstack 0
   276  0011D6                     _init_I2C:
   277                           	opt callstack 29
   278  0011D6                     
   279                           ;I2C_slave.c: 91:     TRISBbits.TRISB0 = 1;
   280  0011D6  8093               	bsf	147,0,c	;volatile
   281                           
   282                           ;I2C_slave.c: 92:     TRISBbits.TRISB1 = 1;
   283  0011D8  8293               	bsf	147,1,c	;volatile
   284  0011DA                     
   285                           ;I2C_slave.c: 94:     SSPADD = 0x30;
   286  0011DA  0E30               	movlw	48
   287  0011DC  6EC8               	movwf	200,c	;volatile
   288                           
   289                           ;I2C_slave.c: 95:     SSPCON1 = 0x36;
   290  0011DE  0E36               	movlw	54
   291  0011E0  6EC6               	movwf	198,c	;volatile
   292                           
   293                           ;I2C_slave.c: 96:     SSPSTAT = 0x80;
   294  0011E2  0E80               	movlw	128
   295  0011E4  6EC7               	movwf	199,c	;volatile
   296                           
   297                           ;I2C_slave.c: 97:     SSPCON2 = 0x01;
   298  0011E6  0E01               	movlw	1
   299  0011E8  6EC5               	movwf	197,c	;volatile
   300  0011EA                     
   301                           ;I2C_slave.c: 99:     PIE1bits.SSPIE = 1;
   302  0011EA  869D               	bsf	157,3,c	;volatile
   303  0011EC                     
   304                           ;I2C_slave.c: 100:     INTCONbits.PEIE = 1;
   305  0011EC  8CF2               	bsf	242,6,c	;volatile
   306  0011EE  0012               	return		;funcret
   307  0011F0                     __end_of_init_I2C:
   308                           	opt callstack 0
   309                           
   310 ;; *************** function _init_Chip *****************
   311 ;; Defined at:
   312 ;;		line 74 in file "I2C_slave.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   326 ;;      Params:         0       0       0       0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text2
   341  001184                     __ptext2:
   342                           	opt callstack 0
   343  001184                     _init_Chip:
   344                           	opt callstack 29
   345  001184                     
   346                           ;I2C_slave.c: 76:     LATA = 0x00;
   347  001184  0E00               	movlw	0
   348  001186  6E89               	movwf	137,c	;volatile
   349                           
   350                           ;I2C_slave.c: 77:     TRISA = 0x01;
   351  001188  0E01               	movlw	1
   352  00118A  6E92               	movwf	146,c	;volatile
   353                           
   354                           ;I2C_slave.c: 78:     ADCON1 = 0x00;
   355  00118C  0E00               	movlw	0
   356  00118E  6EC1               	movwf	193,c	;volatile
   357                           
   358                           ;I2C_slave.c: 79:     ANSELA = 0x00;
   359  001190  0E00               	movlw	0
   360  001192  010F               	movlb	15	; () banked
   361  001194  6F5B               	movwf	91,b	;volatile
   362                           
   363                           ;I2C_slave.c: 80:     CM1CON0 = 0x00;
   364  001196  0E00               	movlw	0
   365  001198  6E98               	movwf	152,c	;volatile
   366                           
   367                           ;I2C_slave.c: 81:     LATB = 0x00;
   368  00119A  0E00               	movlw	0
   369  00119C  6E8A               	movwf	138,c	;volatile
   370                           
   371                           ;I2C_slave.c: 82:     TRISB = 0x00;
   372  00119E  0E00               	movlw	0
   373  0011A0  6E93               	movwf	147,c	;volatile
   374                           
   375                           ;I2C_slave.c: 83:     LATC = 0x00;
   376  0011A2  0E00               	movlw	0
   377  0011A4  6E8B               	movwf	139,c	;volatile
   378                           
   379                           ;I2C_slave.c: 84:     TRISC = 0x00;
   380  0011A6  0E00               	movlw	0
   381  0011A8  6E94               	movwf	148,c	;volatile
   382  0011AA                     
   383                           ; BSR set to: 15
   384                           ;I2C_slave.c: 85:  INTCONbits.GIE = 0;
   385  0011AA  9EF2               	bcf	242,7,c	;volatile
   386  0011AC                     
   387                           ; BSR set to: 15
   388  0011AC  0012               	return		;funcret
   389  0011AE                     __end_of_init_Chip:
   390                           	opt callstack 0
   391                           
   392 ;; *************** function _high_ISR *****************
   393 ;; Defined at:
   394 ;;		line 121 in file "I2C_slave.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         0       0       0       0       0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0       0       0
   410 ;;      Temps:          4       0       0       0       0       0       0       0       0
   411 ;;      Totals:         4       0       0       0       0       0       0       0       0
   412 ;;Total ram usage:        4 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		Interrupt level 2
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	intcode
   422  001008                     __pintcode:
   423                           	opt callstack 0
   424  001008                     _high_ISR:
   425                           	opt callstack 29
   426                           
   427                           ; BSR set to: 15
   428                           ;incstack = 0
   429  001008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   430  00100A  CFE1 F01C          	movff	fsr1l,??_high_ISR
   431  00100E  CFE2 F01D          	movff	fsr1h,??_high_ISR+1
   432  001012  CFD9 F01E          	movff	fsr2l,??_high_ISR+2
   433  001016  CFDA F01F          	movff	fsr2h,??_high_ISR+3
   434  00101A                     
   435                           ;I2C_slave.c: 123:     if(PIR1bits.SSPIF==1){
   436  00101A  A69E               	btfss	158,3,c	;volatile
   437  00101C  EF12  F008         	goto	i2u1_41
   438  001020  EF14  F008         	goto	i2u1_40
   439  001024                     i2u1_41:
   440  001024  EF94  F008         	goto	i2l872
   441  001028                     i2u1_40:
   442  001028                     
   443                           ;I2C_slave.c: 126:         if((SSPSTAT&0x20)==0){
   444  001028  BAC7               	btfsc	199,5,c	;volatile
   445  00102A  EF19  F008         	goto	i2u2_41
   446  00102E  EF1B  F008         	goto	i2u2_40
   447  001032                     i2u2_41:
   448  001032  EF55  F008         	goto	i2l848
   449  001036                     i2u2_40:
   450  001036                     
   451                           ;I2C_slave.c: 128:             addr = SSPBUF;
   452  001036  CFC9 F01A          	movff	4041,_addr	;volatile
   453  00103A                     
   454                           ;I2C_slave.c: 129:             LATCbits.LATC7 ^= 1;
   455  00103A  7E8B               	btg	139,7,c	;volatile
   456  00103C                     
   457                           ;I2C_slave.c: 132:             if(SSPSTATbits.R_nW){
   458  00103C  A4C7               	btfss	199,2,c	;volatile
   459  00103E  EF23  F008         	goto	i2u3_41
   460  001042  EF25  F008         	goto	i2u3_40
   461  001046                     i2u3_41:
   462  001046  EF4F  F008         	goto	i2l846
   463  00104A                     i2u3_40:
   464  00104A                     
   465                           ;I2C_slave.c: 133:                 I2Cstatus = 1;
   466  00104A  0E01               	movlw	1
   467  00104C  6E17               	movwf	_I2Cstatus^0,c
   468  00104E                     
   469                           ;I2C_slave.c: 135:                 if((I2Cstatus==1)&&(Txbuf.idx<10))
   470  00104E  0417               	decf	_I2Cstatus^0,w,c
   471  001050  A4D8               	btfss	status,2,c
   472  001052  EF2D  F008         	goto	i2u4_41
   473  001056  EF2F  F008         	goto	i2u4_40
   474  00105A                     i2u4_41:
   475  00105A  EF90  F008         	goto	i2l864
   476  00105E                     i2u4_40:
   477  00105E  0E0A               	movlw	10
   478  001060  6016               	cpfslt	(_Txbuf+10)^0,c
   479  001062  EF35  F008         	goto	i2u5_41
   480  001066  EF37  F008         	goto	i2u5_40
   481  00106A                     i2u5_41:
   482  00106A  EF90  F008         	goto	i2l864
   483  00106E                     i2u5_40:
   484  00106E                     
   485                           ;I2C_slave.c: 136:                 {;I2C_slave.c: 137:                     SSPBUF = Txbu
      +                          f.data[Txbuf.idx];
   486  00106E  0E0C               	movlw	low _Txbuf
   487  001070  2416               	addwf	(_Txbuf+10)^0,w,c
   488  001072  6ED9               	movwf	fsr2l,c
   489  001074  6ADA               	clrf	fsr2h,c
   490  001076  0E00               	movlw	high _Txbuf
   491  001078  22DA               	addwfc	fsr2h,f,c
   492  00107A  50DF               	movf	indf2,w,c
   493  00107C  6EC9               	movwf	201,c	;volatile
   494  00107E                     
   495                           ;I2C_slave.c: 139:                     Txbuf.idx++;
   496  00107E  2A16               	incf	(_Txbuf+10)^0,f,c
   497  001080                     
   498                           ;I2C_slave.c: 140:                     if(Txbuf.idx==10){
   499  001080  0E0A               	movlw	10
   500  001082  1816               	xorwf	(_Txbuf+10)^0,w,c
   501  001084  A4D8               	btfss	status,2,c
   502  001086  EF47  F008         	goto	i2u6_41
   503  00108A  EF49  F008         	goto	i2u6_40
   504  00108E                     i2u6_41:
   505  00108E  EF53  F008         	goto	i2l104
   506  001092                     i2u6_40:
   507  001092                     
   508                           ;I2C_slave.c: 142:                         I2Cstatus = 0;
   509  001092  0E00               	movlw	0
   510  001094  6E17               	movwf	_I2Cstatus^0,c
   511                           
   512                           ;I2C_slave.c: 143:                         Txbuf.idx = 0;
   513  001096  0E00               	movlw	0
   514  001098  6E16               	movwf	(_Txbuf+10)^0,c
   515  00109A  EF90  F008         	goto	i2l864
   516  00109E                     i2l846:
   517                           
   518                           ;I2C_slave.c: 149:                 I2Cstatus = 2;
   519  00109E  0E02               	movlw	2
   520  0010A0  6E17               	movwf	_I2Cstatus^0,c
   521  0010A2  EF90  F008         	goto	i2l864
   522  0010A6                     i2l104:
   523                           
   524                           ;I2C_slave.c: 152:         }
   525  0010A6  EF90  F008         	goto	i2l864
   526  0010AA                     i2l848:
   527                           
   528                           ;I2C_slave.c: 155:             if((I2Cstatus==2)&&(Rxbuf.idx<10)){
   529  0010AA  0E02               	movlw	2
   530  0010AC  1817               	xorwf	_I2Cstatus^0,w,c
   531  0010AE  A4D8               	btfss	status,2,c
   532  0010B0  EF5C  F008         	goto	i2u7_41
   533  0010B4  EF5E  F008         	goto	i2u7_40
   534  0010B8                     i2u7_41:
   535  0010B8  EF8C  F008         	goto	i2l862
   536  0010BC                     i2u7_40:
   537  0010BC  0E0A               	movlw	10
   538  0010BE  600B               	cpfslt	(_Rxbuf+10)^0,c
   539  0010C0  EF64  F008         	goto	i2u8_41
   540  0010C4  EF66  F008         	goto	i2u8_40
   541  0010C8                     i2u8_41:
   542  0010C8  EF8C  F008         	goto	i2l862
   543  0010CC                     i2u8_40:
   544  0010CC                     
   545                           ;I2C_slave.c: 156:                 Rxbuf.data[Rxbuf.idx] = SSPBUF;
   546  0010CC  0E01               	movlw	low _Rxbuf
   547  0010CE  240B               	addwf	(_Rxbuf+10)^0,w,c
   548  0010D0  6ED9               	movwf	fsr2l,c
   549  0010D2  6ADA               	clrf	fsr2h,c
   550  0010D4  0E00               	movlw	high _Rxbuf
   551  0010D6  22DA               	addwfc	fsr2h,f,c
   552  0010D8  CFC9 FFDF          	movff	4041,indf2	;volatile
   553  0010DC                     
   554                           ;I2C_slave.c: 158:                 Txbuf.data[Rxbuf.idx] = Rxbuf.data[Rxbuf.idx];
   555  0010DC  0E01               	movlw	low _Rxbuf
   556  0010DE  240B               	addwf	(_Rxbuf+10)^0,w,c
   557  0010E0  6ED9               	movwf	fsr2l,c
   558  0010E2  6ADA               	clrf	fsr2h,c
   559  0010E4  0E00               	movlw	high _Rxbuf
   560  0010E6  22DA               	addwfc	fsr2h,f,c
   561  0010E8  0E0C               	movlw	low _Txbuf
   562  0010EA  240B               	addwf	(_Rxbuf+10)^0,w,c
   563  0010EC  6EE1               	movwf	fsr1l,c
   564  0010EE  6AE2               	clrf	fsr1h,c
   565  0010F0  0E00               	movlw	high _Txbuf
   566  0010F2  22E2               	addwfc	fsr1h,f,c
   567  0010F4  CFDF FFE7          	movff	indf2,indf1
   568  0010F8                     
   569                           ;I2C_slave.c: 159:                 Rxbuf.idx++;
   570  0010F8  2A0B               	incf	(_Rxbuf+10)^0,f,c
   571  0010FA                     
   572                           ;I2C_slave.c: 160:                 if(Rxbuf.idx==10){
   573  0010FA  0E0A               	movlw	10
   574  0010FC  180B               	xorwf	(_Rxbuf+10)^0,w,c
   575  0010FE  A4D8               	btfss	status,2,c
   576  001100  EF84  F008         	goto	i2u9_41
   577  001104  EF86  F008         	goto	i2u9_40
   578  001108                     i2u9_41:
   579  001108  EF90  F008         	goto	i2l864
   580  00110C                     i2u9_40:
   581  00110C                     
   582                           ;I2C_slave.c: 161:                     Rxbuf.idx = 0;
   583  00110C  0E00               	movlw	0
   584  00110E  6E0B               	movwf	(_Rxbuf+10)^0,c
   585                           
   586                           ;I2C_slave.c: 162:                     I2Cstatus = 0;
   587  001110  0E00               	movlw	0
   588  001112  6E17               	movwf	_I2Cstatus^0,c
   589  001114  EF90  F008         	goto	i2l864
   590  001118                     i2l862:
   591                           
   592                           ;I2C_slave.c: 166:                 I2Cstatus = 0;
   593  001118  0E00               	movlw	0
   594  00111A  6E17               	movwf	_I2Cstatus^0,c
   595                           
   596                           ;I2C_slave.c: 167:                 Rxbuf.idx = 0;
   597  00111C  0E00               	movlw	0
   598  00111E  6E0B               	movwf	(_Rxbuf+10)^0,c
   599  001120                     i2l864:
   600                           
   601                           ;I2C_slave.c: 171:         SSPCON1bits.SSPOV = 0;
   602  001120  9CC6               	bcf	198,6,c	;volatile
   603  001122                     
   604                           ;I2C_slave.c: 172:         SSPCON1bits.WCOL = 0;
   605  001122  9EC6               	bcf	198,7,c	;volatile
   606  001124                     
   607                           ;I2C_slave.c: 173:         PIR1bits.SSPIF = 0;
   608  001124  969E               	bcf	158,3,c	;volatile
   609  001126                     
   610                           ;I2C_slave.c: 174:         SSPCON1bits.CKP = 1;
   611  001126  88C6               	bsf	198,4,c	;volatile
   612  001128                     i2l872:
   613                           
   614                           ;I2C_slave.c: 177:     if(PIR1bits.ADIF==1){
   615  001128  AC9E               	btfss	158,6,c	;volatile
   616  00112A  EF99  F008         	goto	i2u10_41
   617  00112E  EF9B  F008         	goto	i2u10_40
   618  001132                     i2u10_41:
   619  001132  EFA0  F008         	goto	i2l110
   620  001136                     i2u10_40:
   621  001136                     
   622                           ;I2C_slave.c: 179:         PIR1bits.ADIF = 0;
   623  001136  9C9E               	bcf	158,6,c	;volatile
   624                           
   625                           ;I2C_slave.c: 180:         Txbuf.data[0] = ADRESH;
   626  001138  CFC4 F00C          	movff	4036,_Txbuf	;volatile
   627                           
   628                           ;I2C_slave.c: 181:         Txbuf.data[1] = ADRESL;
   629  00113C  CFC3 F00D          	movff	4035,_Txbuf+1	;volatile
   630  001140                     i2l110:
   631  001140  C01F  FFDA         	movff	??_high_ISR+3,fsr2h
   632  001144  C01E  FFD9         	movff	??_high_ISR+2,fsr2l
   633  001148  C01D  FFE2         	movff	??_high_ISR+1,fsr1h
   634  00114C  C01C  FFE1         	movff	??_high_ISR,fsr1l
   635  001150  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   636  001152  0011               	retfie		f
   637  001154                     __end_of_high_ISR:
   638                           	opt callstack 0
   639  0000                     
   640                           	psect	rparam
   641  0000                     
   642                           	psect	temp
   643  000021                     btemp:
   644                           	opt callstack 0
   645  000021                     	ds	1
   646  0000                     int$flags	set	btemp
   647  0000                     wtemp8	set	btemp+1
   648  0000                     ttemp5	set	btemp+1
   649  0000                     ttemp6	set	btemp+4
   650  0000                     ttemp7	set	btemp+8
   651                           tosu	equ	0xFFF
   652                           tosh	equ	0xFFE
   653                           tosl	equ	0xFFD
   654                           stkptr	equ	0xFFC
   655                           pclatu	equ	0xFFB
   656                           pclath	equ	0xFFA
   657                           pcl	equ	0xFF9
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           prodh	equ	0xFF4
   663                           prodl	equ	0xFF3
   664                           indf0	equ	0xFEF
   665                           postinc0	equ	0xFEE
   666                           postdec0	equ	0xFED
   667                           preinc0	equ	0xFEC
   668                           plusw0	equ	0xFEB
   669                           fsr0h	equ	0xFEA
   670                           fsr0l	equ	0xFE9
   671                           wreg	equ	0xFE8
   672                           indf1	equ	0xFE7
   673                           postinc1	equ	0xFE6
   674                           postdec1	equ	0xFE5
   675                           preinc1	equ	0xFE4
   676                           plusw1	equ	0xFE3
   677                           fsr1h	equ	0xFE2
   678                           fsr1l	equ	0xFE1
   679                           bsr	equ	0xFE0
   680                           indf2	equ	0xFDF
   681                           postinc2	equ	0xFDE
   682                           postdec2	equ	0xFDD
   683                           preinc2	equ	0xFDC
   684                           plusw2	equ	0xFDB
   685                           fsr2h	equ	0xFDA
   686                           fsr2l	equ	0xFD9
   687                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _init_Chip
                           _init_I2C
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Chip                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_ISR                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Chip
   _init_I2C

 _high_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4      20       1       34.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       6        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 17:25:32 2020

            _SSPSTATbits 000FC7                       l85 11AC                       l88 11EE  
                    l800 1160                      l810 1172                      l802 1164  
                    l812 117A                      l804 1168                      l806 116A  
                    l808 116E                      l790 11D6                      l792 11DA  
                    l786 1184                      l794 11EA                      l788 11AA  
                    l796 11EC                      l798 1158                      u117 1174  
                    wreg 000FE8                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _addr 001A                     _data 001B  
                   _main 1158                     _sent 0020                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0021  
                   start 1154             ___param_bank 000000                    ?_main 001C  
                  i2l110 1140                    i2l104 10A6                    i2l830 103C  
                  i2l822 101A                    i2l840 107E                    i2l832 104A  
                  i2l824 1028                    i2l850 10BC                    i2l842 1080  
                  i2l834 104E                    i2l826 1036                    i2l860 110C  
                  i2l852 10CC                    i2l844 1092                    i2l836 105E  
                  i2l828 103A                    i2l870 1126                    i2l854 10DC  
                  i2l862 1118                    i2l838 106E                    i2l846 109E  
                  i2l856 10F8                    i2l864 1120                    i2l848 10AA  
                  i2l872 1128                    i2l874 1136                    i2l866 1122  
                  i2l858 10FA                    i2l868 1124                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _Rxbuf 0001  
                  _Txbuf 000C                    tablat 000FF5                    ttemp5 0022  
                  ttemp6 0025                    ttemp7 0029                    status 000FD8  
                  wtemp8 0022          __initialization 11AE             __end_of_main 1184  
                 ??_main 0020            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELA 000F5B                   i2u1_40 1028  
                 i2u1_41 1024                   i2u2_40 1036                   i2u2_41 1032  
                 i2u3_40 104A                   i2u3_41 1046                   i2u4_40 105E  
                 i2u4_41 105A                   i2u5_40 106E                   i2u5_41 106A  
                 i2u6_40 1092                   i2u6_41 108E                   i2u7_40 10BC  
                 i2u7_41 10B8                   _SSPADD 000FC8                   i2u8_40 10CC  
                 i2u8_41 10C8                   i2u9_40 110C                   i2u9_41 1108  
                 _SSPBUF 000FC9         __end_of_high_ISR 1154         __end_of_init_I2C 11F0  
                 clear_0 11C6             __pdataCOMRAM 0020                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 11CC            ___rparam_used 000001           __pcstackCOMRAM 001C  
     __size_of_init_Chip 002A                  _CM1CON0 000F98                  i2u10_40 1136  
                i2u10_41 1132                ?_high_ISR 001C                  _SSPCON1 000FC6  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7                ?_init_I2C 001C  
                __Hparam 0000                  __Lparam 0000                _I2Cstatus 0017  
                __pcinit 11AE                  __ramtop 0800                  __ptext0 1158  
                __ptext1 11D6                  __ptext2 1184        __end_of_init_Chip 11AE  
             ??_high_ISR 001C     end_of_initialization 11CC               ??_init_I2C 0020  
                postinc0 000FEE                _TRISBbits 000F93            __pidataCOMRAM 11F0  
    start_initialization 11AE              __pbssCOMRAM 0001        __size_of_high_ISR 014C  
      __size_of_init_I2C 001A                _data_past 0019                __pintcode 1008  
              _init_Chip 1184                 _LATCbits 000F8B                 _PIE1bits 000F9D  
               _PIR1bits 000F9E               _ADCON0bits 000FC2               ?_init_Chip 001C  
               __Hrparam 0000                 __Lrparam 0000                 _RxStatus 0018  
               _high_ISR 1008                 _init_I2C 11D6            __size_of_main 002C  
               int$flags 0021               _INTCONbits 000FF2              ??_init_Chip 0020  
               intlevel2 0000              _SSPCON1bits 000FC6  
