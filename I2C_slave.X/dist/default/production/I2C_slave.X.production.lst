

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 03 21:56:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F25K50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  001242                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _sent
    59  001242  11                 	db	17
    60  0000                     _ANSELA	set	3931
    61  0000                     _SSPCON1bits	set	4038
    62  0000                     _SSPSTATbits	set	4039
    63  0000                     _SSPBUF	set	4041
    64  0000                     _PIR1bits	set	3998
    65  0000                     _LATCbits	set	3979
    66  0000                     _PIE1bits	set	3997
    67  0000                     _SSPCON2	set	4037
    68  0000                     _SSPSTAT	set	4039
    69  0000                     _SSPCON1	set	4038
    70  0000                     _SSPADD	set	4040
    71  0000                     _TRISBbits	set	3987
    72  0000                     _TRISC	set	3988
    73  0000                     _LATC	set	3979
    74  0000                     _TRISB	set	3987
    75  0000                     _CM1CON0	set	3992
    76  0000                     _ADCON1	set	4033
    77  0000                     _TRISA	set	3986
    78  0000                     _LATA	set	3977
    79  0000                     _LATB	set	3978
    80  0000                     _INTCONbits	set	4082
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85  001200                     __pcinit:
    86                           	opt callstack 0
    87  001200                     start_initialization:
    88                           	opt callstack 0
    89  001200                     __initialization:
    90                           	opt callstack 0
    91                           
    92                           ; Initialize objects allocated to COMRAM (1 bytes)
    93                           ; load TBLPTR registers with __pidataCOMRAM
    94  001200  0E42               	movlw	low __pidataCOMRAM
    95  001202  6EF6               	movwf	tblptrl,c
    96  001204  0E12               	movlw	high __pidataCOMRAM
    97  001206  6EF7               	movwf	tblptrh,c
    98  001208  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    99  00120A  6EF8               	movwf	tblptru,c
   100  00120C  0009               	tblrd		*+	;fetch initializer
   101  00120E  CFF5 F023          	movff	tablat,__pdataCOMRAM
   102                           
   103                           ; Clear objects allocated to COMRAM (27 bytes)
   104  001212  EE00  F001         	lfsr	0,__pbssCOMRAM
   105  001216  0E1B               	movlw	27
   106  001218                     clear_0:
   107  001218  6AEE               	clrf	postinc0,c
   108  00121A  06E8               	decf	wreg,f,c
   109  00121C  E1FD               	bnz	clear_0
   110  00121E                     end_of_initialization:
   111                           	opt callstack 0
   112  00121E                     __end_of__initialization:
   113                           	opt callstack 0
   114  00121E  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  001220  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  001222  0100               	movlb	0
   117  001224  EFD0  F008         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMRAM
   120  000001                     __pbssCOMRAM:
   121                           	opt callstack 0
   122  000001                     _Rxbuf:
   123                           	opt callstack 0
   124  000001                     	ds	11
   125  00000C                     _Txbuf:
   126                           	opt callstack 0
   127  00000C                     	ds	11
   128  000017                     _I2Cstatus:
   129                           	opt callstack 0
   130  000017                     	ds	1
   131  000018                     _RxStatus:
   132                           	opt callstack 0
   133  000018                     	ds	1
   134  000019                     _data_past:
   135                           	opt callstack 0
   136  000019                     	ds	1
   137  00001A                     _addr:
   138                           	opt callstack 0
   139  00001A                     	ds	1
   140  00001B                     _data:
   141                           	opt callstack 0
   142  00001B                     	ds	1
   143                           
   144                           	psect	dataCOMRAM
   145  000023                     __pdataCOMRAM:
   146                           	opt callstack 0
   147  000023                     _sent:
   148                           	opt callstack 0
   149  000023                     	ds	1
   150                           
   151                           	psect	cstackCOMRAM
   152  00001C                     __pcstackCOMRAM:
   153                           	opt callstack 0
   154  00001C                     ??_writePortB:
   155  00001C                     
   156                           ; 1 bytes @ 0x0
   157  00001C                     	ds	1
   158  00001D                     writePortB@data:
   159                           	opt callstack 0
   160                           
   161                           ; 1 bytes @ 0x1
   162  00001D                     	ds	1
   163  00001E                     ??_high_ISR:
   164                           
   165                           ; 1 bytes @ 0x2
   166  00001E                     	ds	4
   167  000022                     ??_main:
   168                           
   169                           ; 1 bytes @ 0x6
   170  000022                     	ds	1
   171                           
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 52 in file "I2C_slave.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   191 ;;      Params:         0       0       0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0
   193 ;;      Temps:          1       0       0       0       0       0       0       0       0
   194 ;;      Totals:         1       0       0       0       0       0       0       0       0
   195 ;;Total ram usage:        1 bytes
   196 ;; Hardware stack levels required when called:    3
   197 ;; This function calls:
   198 ;;		_init_Chip
   199 ;;		_init_I2C
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  0011A0                     __ptext0:
   207                           	opt callstack 0
   208  0011A0                     _main:
   209                           	opt callstack 28
   210  0011A0                     
   211                           ;I2C_slave.c: 54:     init_Chip();
   212  0011A0  ECEB  F008         	call	_init_Chip	;wreg free
   213                           
   214                           ;I2C_slave.c: 55:     init_I2C();
   215  0011A4  EC14  F009         	call	_init_I2C	;wreg free
   216  0011A8                     
   217                           ;I2C_slave.c: 58:     Txbuf.idx = 0;
   218  0011A8  0E00               	movlw	0
   219  0011AA  6E16               	movwf	(_Txbuf+10)^0,c
   220  0011AC                     
   221                           ;I2C_slave.c: 59:     Rxbuf.idx = 0;
   222  0011AC  0E00               	movlw	0
   223  0011AE  6E0B               	movwf	(_Rxbuf+10)^0,c
   224  0011B0                     
   225                           ;I2C_slave.c: 61:     INTCONbits.GIE = 1;
   226  0011B0  8EF2               	bsf	242,7,c	;volatile
   227  0011B2                     
   228                           ;I2C_slave.c: 62:     LATB = 0;
   229  0011B2  0E00               	movlw	0
   230  0011B4  6E8A               	movwf	138,c	;volatile
   231  0011B6                     
   232                           ;I2C_slave.c: 63:     LATA = 0;
   233  0011B6  0E00               	movlw	0
   234  0011B8  6E89               	movwf	137,c	;volatile
   235  0011BA                     l802:
   236                           
   237                           ;I2C_slave.c: 65:     {;I2C_slave.c: 66:         _delay((unsigned long)((1)*(48000000/40
      +                          00.0)));
   238  0011BA  0E10               	movlw	16
   239  0011BC  6E22               	movwf	??_main^0,c
   240  0011BE  0E94               	movlw	148
   241  0011C0                     u107:
   242  0011C0  2EE8               	decfsz	wreg,f,c
   243  0011C2  D7FE               	bra	u107
   244  0011C4  2E22               	decfsz	??_main^0,f,c
   245  0011C6  D7FC               	bra	u107
   246  0011C8  D000               	nop2	
   247  0011CA                     
   248                           ;I2C_slave.c: 73:         data_past = data;
   249  0011CA  0E00               	movlw	0
   250  0011CC  6E19               	movwf	_data_past^0,c
   251  0011CE  EFDD  F008         	goto	l802
   252  0011D2  EFAF  F008         	goto	start
   253  0011D6                     __end_of_main:
   254                           	opt callstack 0
   255                           
   256 ;; *************** function _init_I2C *****************
   257 ;; Defined at:
   258 ;;		line 92 in file "I2C_slave.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; Hardware stack levels required when called:    2
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text1
   287  001228                     __ptext1:
   288                           	opt callstack 0
   289  001228                     _init_I2C:
   290                           	opt callstack 28
   291  001228                     
   292                           ;I2C_slave.c: 95:     TRISBbits.TRISB0 = 1;
   293  001228  8093               	bsf	147,0,c	;volatile
   294                           
   295                           ;I2C_slave.c: 96:     TRISBbits.TRISB1 = 1;
   296  00122A  8293               	bsf	147,1,c	;volatile
   297  00122C                     
   298                           ;I2C_slave.c: 98:     SSPADD = 0x40;
   299  00122C  0E40               	movlw	64
   300  00122E  6EC8               	movwf	200,c	;volatile
   301                           
   302                           ;I2C_slave.c: 99:     SSPCON1 = 0x36;
   303  001230  0E36               	movlw	54
   304  001232  6EC6               	movwf	198,c	;volatile
   305                           
   306                           ;I2C_slave.c: 100:     SSPSTAT = 0x80;
   307  001234  0E80               	movlw	128
   308  001236  6EC7               	movwf	199,c	;volatile
   309                           
   310                           ;I2C_slave.c: 101:     SSPCON2 = 0x01;
   311  001238  0E01               	movlw	1
   312  00123A  6EC5               	movwf	197,c	;volatile
   313  00123C                     
   314                           ;I2C_slave.c: 103:     PIE1bits.SSPIE = 1;
   315  00123C  869D               	bsf	157,3,c	;volatile
   316  00123E                     
   317                           ;I2C_slave.c: 104:     INTCONbits.PEIE = 1;
   318  00123E  8CF2               	bsf	242,6,c	;volatile
   319  001240  0012               	return		;funcret
   320  001242                     __end_of_init_I2C:
   321                           	opt callstack 0
   322                           
   323 ;; *************** function _init_Chip *****************
   324 ;; Defined at:
   325 ;;		line 78 in file "I2C_slave.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   339 ;;      Params:         0       0       0       0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; Hardware stack levels required when called:    2
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text2
   354  0011D6                     __ptext2:
   355                           	opt callstack 0
   356  0011D6                     _init_Chip:
   357                           	opt callstack 28
   358  0011D6                     
   359                           ;I2C_slave.c: 80:     LATA = 0x00;
   360  0011D6  0E00               	movlw	0
   361  0011D8  6E89               	movwf	137,c	;volatile
   362                           
   363                           ;I2C_slave.c: 81:     TRISA = 0x00;
   364  0011DA  0E00               	movlw	0
   365  0011DC  6E92               	movwf	146,c	;volatile
   366                           
   367                           ;I2C_slave.c: 82:     ADCON1 = 0x00;
   368  0011DE  0E00               	movlw	0
   369  0011E0  6EC1               	movwf	193,c	;volatile
   370                           
   371                           ;I2C_slave.c: 83:     ANSELA = 0x00;
   372  0011E2  0E00               	movlw	0
   373  0011E4  010F               	movlb	15	; () banked
   374  0011E6  6F5B               	movwf	91,b	;volatile
   375                           
   376                           ;I2C_slave.c: 84:     CM1CON0 = 0x00;
   377  0011E8  0E00               	movlw	0
   378  0011EA  6E98               	movwf	152,c	;volatile
   379                           
   380                           ;I2C_slave.c: 85:     LATB = 0x00;
   381  0011EC  0E00               	movlw	0
   382  0011EE  6E8A               	movwf	138,c	;volatile
   383                           
   384                           ;I2C_slave.c: 86:     TRISB = 0x00;
   385  0011F0  0E00               	movlw	0
   386  0011F2  6E93               	movwf	147,c	;volatile
   387                           
   388                           ;I2C_slave.c: 87:     LATC = 0x00;
   389  0011F4  0E00               	movlw	0
   390  0011F6  6E8B               	movwf	139,c	;volatile
   391                           
   392                           ;I2C_slave.c: 88:     TRISC = 0x00;
   393  0011F8  0E00               	movlw	0
   394  0011FA  6E94               	movwf	148,c	;volatile
   395  0011FC                     
   396                           ; BSR set to: 15
   397                           ;I2C_slave.c: 89:  INTCONbits.GIE = 0;
   398  0011FC  9EF2               	bcf	242,7,c	;volatile
   399  0011FE                     
   400                           ; BSR set to: 15
   401  0011FE  0012               	return		;funcret
   402  001200                     __end_of_init_Chip:
   403                           	opt callstack 0
   404                           
   405 ;; *************** function _high_ISR *****************
   406 ;; Defined at:
   407 ;;		line 118 in file "I2C_slave.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   421 ;;      Params:         0       0       0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0       0       0
   423 ;;      Temps:          4       0       0       0       0       0       0       0       0
   424 ;;      Totals:         4       0       0       0       0       0       0       0       0
   425 ;;Total ram usage:        4 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    1
   428 ;; This function calls:
   429 ;;		_writePortB
   430 ;; This function is called by:
   431 ;;		Interrupt level 2
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	intcode
   436  001008                     __pintcode:
   437                           	opt callstack 0
   438  001008                     _high_ISR:
   439                           	opt callstack 28
   440                           
   441                           ; BSR set to: 15
   442                           ;incstack = 0
   443  001008  8224               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   444  00100A  CFE1 F01E          	movff	fsr1l,??_high_ISR
   445  00100E  CFE2 F01F          	movff	fsr1h,??_high_ISR+1
   446  001012  CFD9 F020          	movff	fsr2l,??_high_ISR+2
   447  001016  CFDA F021          	movff	fsr2h,??_high_ISR+3
   448  00101A                     
   449                           ;I2C_slave.c: 121:     if(PIR1bits.SSPIF==1){
   450  00101A  A69E               	btfss	158,3,c	;volatile
   451  00101C  EF12  F008         	goto	i2u1_41
   452  001020  EF14  F008         	goto	i2u1_40
   453  001024                     i2u1_41:
   454  001024  EFA5  F008         	goto	i2l96
   455  001028                     i2u1_40:
   456  001028                     
   457                           ;I2C_slave.c: 130:         if((SSPSTAT&0x20)==0){
   458  001028  BAC7               	btfsc	199,5,c	;volatile
   459  00102A  EF19  F008         	goto	i2u2_41
   460  00102E  EF1B  F008         	goto	i2u2_40
   461  001032                     i2u2_41:
   462  001032  EF5D  F008         	goto	i2l832
   463  001036                     i2u2_40:
   464  001036                     
   465                           ;I2C_slave.c: 132:             addr = SSPBUF;
   466  001036  CFC9 F01A          	movff	4041,_addr	;volatile
   467  00103A                     
   468                           ;I2C_slave.c: 133:             LATCbits.LATC7 ^= 1;
   469  00103A  7E8B               	btg	139,7,c	;volatile
   470  00103C                     
   471                           ;I2C_slave.c: 136:             if(SSPSTATbits.R_nW){
   472  00103C  A4C7               	btfss	199,2,c	;volatile
   473  00103E  EF23  F008         	goto	i2u3_41
   474  001042  EF25  F008         	goto	i2u3_40
   475  001046                     i2u3_41:
   476  001046  EF57  F008         	goto	i2l830
   477  00104A                     i2u3_40:
   478  00104A                     
   479                           ;I2C_slave.c: 137:                 I2Cstatus = 1;
   480  00104A  0E01               	movlw	1
   481  00104C  6E17               	movwf	_I2Cstatus^0,c
   482  00104E                     
   483                           ;I2C_slave.c: 139:                 if((I2Cstatus==1)&&(Txbuf.idx<10))
   484  00104E  0417               	decf	_I2Cstatus^0,w,c
   485  001050  A4D8               	btfss	status,2,c
   486  001052  EF2D  F008         	goto	i2u4_41
   487  001056  EF2F  F008         	goto	i2u4_40
   488  00105A                     i2u4_41:
   489  00105A  EFA1  F008         	goto	i2l850
   490  00105E                     i2u4_40:
   491  00105E  0E0A               	movlw	10
   492  001060  6016               	cpfslt	(_Txbuf+10)^0,c
   493  001062  EF35  F008         	goto	i2u5_41
   494  001066  EF37  F008         	goto	i2u5_40
   495  00106A                     i2u5_41:
   496  00106A  EFA1  F008         	goto	i2l850
   497  00106E                     i2u5_40:
   498  00106E                     
   499                           ;I2C_slave.c: 140:                 {;I2C_slave.c: 141:                     SSPBUF = Txbu
      +                          f.data[Txbuf.idx];
   500  00106E  0E0C               	movlw	low _Txbuf
   501  001070  2416               	addwf	(_Txbuf+10)^0,w,c
   502  001072  6ED9               	movwf	fsr2l,c
   503  001074  6ADA               	clrf	fsr2h,c
   504  001076  0E00               	movlw	high _Txbuf
   505  001078  22DA               	addwfc	fsr2h,f,c
   506  00107A  50DF               	movf	indf2,w,c
   507  00107C  6EC9               	movwf	201,c	;volatile
   508                           
   509                           ;I2C_slave.c: 142:                     LATA = Txbuf.data[Txbuf.idx];
   510  00107E  0E0C               	movlw	low _Txbuf
   511  001080  2416               	addwf	(_Txbuf+10)^0,w,c
   512  001082  6ED9               	movwf	fsr2l,c
   513  001084  6ADA               	clrf	fsr2h,c
   514  001086  0E00               	movlw	high _Txbuf
   515  001088  22DA               	addwfc	fsr2h,f,c
   516  00108A  50DF               	movf	indf2,w,c
   517  00108C  6E89               	movwf	137,c	;volatile
   518  00108E                     
   519                           ;I2C_slave.c: 143:                     Txbuf.idx++;
   520  00108E  2A16               	incf	(_Txbuf+10)^0,f,c
   521  001090                     
   522                           ;I2C_slave.c: 144:                     if(Txbuf.idx==10){
   523  001090  0E0A               	movlw	10
   524  001092  1816               	xorwf	(_Txbuf+10)^0,w,c
   525  001094  A4D8               	btfss	status,2,c
   526  001096  EF4F  F008         	goto	i2u6_41
   527  00109A  EF51  F008         	goto	i2u6_40
   528  00109E                     i2u6_41:
   529  00109E  EF5B  F008         	goto	i2l91
   530  0010A2                     i2u6_40:
   531  0010A2                     
   532                           ;I2C_slave.c: 146:                         I2Cstatus = 0;
   533  0010A2  0E00               	movlw	0
   534  0010A4  6E17               	movwf	_I2Cstatus^0,c
   535                           
   536                           ;I2C_slave.c: 147:                         Txbuf.idx = 0;
   537  0010A6  0E00               	movlw	0
   538  0010A8  6E16               	movwf	(_Txbuf+10)^0,c
   539  0010AA  EFA1  F008         	goto	i2l850
   540  0010AE                     i2l830:
   541                           
   542                           ;I2C_slave.c: 161:                 I2Cstatus = 2;
   543  0010AE  0E02               	movlw	2
   544  0010B0  6E17               	movwf	_I2Cstatus^0,c
   545  0010B2  EFA1  F008         	goto	i2l850
   546  0010B6                     i2l91:
   547                           
   548                           ;I2C_slave.c: 164:         }
   549  0010B6  EFA1  F008         	goto	i2l850
   550  0010BA                     i2l832:
   551                           
   552                           ;I2C_slave.c: 167:             if((I2Cstatus==2)&&(Rxbuf.idx<10)){
   553  0010BA  0E02               	movlw	2
   554  0010BC  1817               	xorwf	_I2Cstatus^0,w,c
   555  0010BE  A4D8               	btfss	status,2,c
   556  0010C0  EF64  F008         	goto	i2u7_41
   557  0010C4  EF66  F008         	goto	i2u7_40
   558  0010C8                     i2u7_41:
   559  0010C8  EF9D  F008         	goto	i2l848
   560  0010CC                     i2u7_40:
   561  0010CC  0E0A               	movlw	10
   562  0010CE  600B               	cpfslt	(_Rxbuf+10)^0,c
   563  0010D0  EF6C  F008         	goto	i2u8_41
   564  0010D4  EF6E  F008         	goto	i2u8_40
   565  0010D8                     i2u8_41:
   566  0010D8  EF9D  F008         	goto	i2l848
   567  0010DC                     i2u8_40:
   568  0010DC                     
   569                           ;I2C_slave.c: 169:                 Rxbuf.data[Rxbuf.idx] = SSPBUF;
   570  0010DC  0E01               	movlw	low _Rxbuf
   571  0010DE  240B               	addwf	(_Rxbuf+10)^0,w,c
   572  0010E0  6ED9               	movwf	fsr2l,c
   573  0010E2  6ADA               	clrf	fsr2h,c
   574  0010E4  0E00               	movlw	high _Rxbuf
   575  0010E6  22DA               	addwfc	fsr2h,f,c
   576  0010E8  CFC9 FFDF          	movff	4041,indf2	;volatile
   577  0010EC                     
   578                           ;I2C_slave.c: 170:                 writePortB(Rxbuf.data[Rxbuf.idx]);
   579  0010EC  0E01               	movlw	low _Rxbuf
   580  0010EE  240B               	addwf	(_Rxbuf+10)^0,w,c
   581  0010F0  6ED9               	movwf	fsr2l,c
   582  0010F2  6ADA               	clrf	fsr2h,c
   583  0010F4  0E00               	movlw	high _Rxbuf
   584  0010F6  22DA               	addwfc	fsr2h,f,c
   585  0010F8  50DF               	movf	indf2,w,c
   586  0010FA  ECB1  F008         	call	_writePortB
   587  0010FE                     
   588                           ;I2C_slave.c: 171:                 Txbuf.data[Rxbuf.idx] = Rxbuf.data[Rxbuf.idx];
   589  0010FE  0E01               	movlw	low _Rxbuf
   590  001100  240B               	addwf	(_Rxbuf+10)^0,w,c
   591  001102  6ED9               	movwf	fsr2l,c
   592  001104  6ADA               	clrf	fsr2h,c
   593  001106  0E00               	movlw	high _Rxbuf
   594  001108  22DA               	addwfc	fsr2h,f,c
   595  00110A  0E0C               	movlw	low _Txbuf
   596  00110C  240B               	addwf	(_Rxbuf+10)^0,w,c
   597  00110E  6EE1               	movwf	fsr1l,c
   598  001110  6AE2               	clrf	fsr1h,c
   599  001112  0E00               	movlw	high _Txbuf
   600  001114  22E2               	addwfc	fsr1h,f,c
   601  001116  CFDF FFE7          	movff	indf2,indf1
   602  00111A                     
   603                           ;I2C_slave.c: 172:                 Rxbuf.idx++;
   604  00111A  2A0B               	incf	(_Rxbuf+10)^0,f,c
   605  00111C                     
   606                           ;I2C_slave.c: 173:                 if(Rxbuf.idx==10){
   607  00111C  0E0A               	movlw	10
   608  00111E  180B               	xorwf	(_Rxbuf+10)^0,w,c
   609  001120  A4D8               	btfss	status,2,c
   610  001122  EF95  F008         	goto	i2u9_41
   611  001126  EF97  F008         	goto	i2u9_40
   612  00112A                     i2u9_41:
   613  00112A  EFA1  F008         	goto	i2l850
   614  00112E                     i2u9_40:
   615  00112E                     
   616                           ;I2C_slave.c: 174:                     Rxbuf.idx = 0;
   617  00112E  0E00               	movlw	0
   618  001130  6E0B               	movwf	(_Rxbuf+10)^0,c
   619                           
   620                           ;I2C_slave.c: 175:                     I2Cstatus = 0;
   621  001132  0E00               	movlw	0
   622  001134  6E17               	movwf	_I2Cstatus^0,c
   623  001136  EFA1  F008         	goto	i2l850
   624  00113A                     i2l848:
   625                           
   626                           ;I2C_slave.c: 179:                 I2Cstatus = 0;
   627  00113A  0E00               	movlw	0
   628  00113C  6E17               	movwf	_I2Cstatus^0,c
   629                           
   630                           ;I2C_slave.c: 180:                 Rxbuf.idx = 0;
   631  00113E  0E00               	movlw	0
   632  001140  6E0B               	movwf	(_Rxbuf+10)^0,c
   633  001142                     i2l850:
   634                           
   635                           ;I2C_slave.c: 197:         SSPCON1bits.SSPOV = 0;
   636  001142  9CC6               	bcf	198,6,c	;volatile
   637  001144                     
   638                           ;I2C_slave.c: 198:         SSPCON1bits.WCOL = 0;
   639  001144  9EC6               	bcf	198,7,c	;volatile
   640  001146                     
   641                           ;I2C_slave.c: 199:         PIR1bits.SSPIF = 0;
   642  001146  969E               	bcf	158,3,c	;volatile
   643  001148                     
   644                           ;I2C_slave.c: 200:         SSPCON1bits.CKP = 1;
   645  001148  88C6               	bsf	198,4,c	;volatile
   646  00114A                     i2l96:
   647  00114A  C021  FFDA         	movff	??_high_ISR+3,fsr2h
   648  00114E  C020  FFD9         	movff	??_high_ISR+2,fsr2l
   649  001152  C01F  FFE2         	movff	??_high_ISR+1,fsr1h
   650  001156  C01E  FFE1         	movff	??_high_ISR,fsr1l
   651  00115A  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   652  00115C  0011               	retfie		f
   653  00115E                     __end_of_high_ISR:
   654                           	opt callstack 0
   655                           
   656 ;; *************** function _writePortB *****************
   657 ;; Defined at:
   658 ;;		line 107 in file "I2C_slave.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  data            1    wreg     unsigned char 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  data            1    1[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         0       0       0       0       0       0       0       0       0
   673 ;;      Locals:         1       0       0       0       0       0       0       0       0
   674 ;;      Temps:          1       0       0       0       0       0       0       0       0
   675 ;;      Totals:         2       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        2 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_high_ISR
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text4
   686  001162                     __ptext4:
   687                           	opt callstack 0
   688  001162                     _writePortB:
   689                           	opt callstack 28
   690                           
   691                           ;incstack = 0
   692                           ;writePortB@data stored from wreg
   693  001162  6E1D               	movwf	writePortB@data^0,c
   694  001164                     
   695                           ;I2C_slave.c: 107: void writePortB(unsigned char data);I2C_slave.c: 108: {;I2C_slave.c: 
      +                          109:     LATB = data;
   696  001164  C01D  FF8A         	movff	writePortB@data,3978	;volatile
   697  001168                     
   698                           ;I2C_slave.c: 110:     LATCbits.LATC1 = (data>>2)&0x01;
   699  001168  C01D  F01C         	movff	writePortB@data,??_writePortB
   700  00116C  90D8               	bcf	status,0,c
   701  00116E  321C               	rrcf	??_writePortB^0,f,c
   702  001170  90D8               	bcf	status,0,c
   703  001172  321C               	rrcf	??_writePortB^0,f,c
   704  001174  0E01               	movlw	1
   705  001176  161C               	andwf	??_writePortB^0,f,c
   706  001178  461C               	rlncf	??_writePortB^0,f,c
   707  00117A  508B               	movf	139,w,c	;volatile
   708  00117C  181C               	xorwf	??_writePortB^0,w,c
   709  00117E  0BFD               	andlw	-3
   710  001180  181C               	xorwf	??_writePortB^0,w,c
   711  001182  6E8B               	movwf	139,c	;volatile
   712  001184                     
   713                           ;I2C_slave.c: 111:     LATCbits.LATC2 = (data>>1)&0x01;
   714  001184  C01D  F01C         	movff	writePortB@data,??_writePortB
   715  001188  90D8               	bcf	status,0,c
   716  00118A  321C               	rrcf	??_writePortB^0,f,c
   717  00118C  0E01               	movlw	1
   718  00118E  161C               	andwf	??_writePortB^0,f,c
   719  001190  461C               	rlncf	??_writePortB^0,f,c
   720  001192  461C               	rlncf	??_writePortB^0,f,c
   721  001194  508B               	movf	139,w,c	;volatile
   722  001196  181C               	xorwf	??_writePortB^0,w,c
   723  001198  0BFB               	andlw	-5
   724  00119A  181C               	xorwf	??_writePortB^0,w,c
   725  00119C  6E8B               	movwf	139,c	;volatile
   726  00119E  0012               	return		;funcret
   727  0011A0                     __end_of_writePortB:
   728                           	opt callstack 0
   729  0000                     
   730                           	psect	rparam
   731  0000                     
   732                           	psect	temp
   733  000024                     btemp:
   734                           	opt callstack 0
   735  000024                     	ds	1
   736  0000                     int$flags	set	btemp
   737  0000                     wtemp8	set	btemp+1
   738  0000                     ttemp5	set	btemp+1
   739  0000                     ttemp6	set	btemp+4
   740  0000                     ttemp7	set	btemp+8
   741                           tosu	equ	0xFFF
   742                           tosh	equ	0xFFE
   743                           tosl	equ	0xFFD
   744                           stkptr	equ	0xFFC
   745                           pclatu	equ	0xFFB
   746                           pclath	equ	0xFFA
   747                           pcl	equ	0xFF9
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           prodh	equ	0xFF4
   753                           prodl	equ	0xFF3
   754                           indf0	equ	0xFEF
   755                           postinc0	equ	0xFEE
   756                           postdec0	equ	0xFED
   757                           preinc0	equ	0xFEC
   758                           plusw0	equ	0xFEB
   759                           fsr0h	equ	0xFEA
   760                           fsr0l	equ	0xFE9
   761                           wreg	equ	0xFE8
   762                           indf1	equ	0xFE7
   763                           postinc1	equ	0xFE6
   764                           postdec1	equ	0xFE5
   765                           preinc1	equ	0xFE4
   766                           plusw1	equ	0xFE3
   767                           fsr1h	equ	0xFE2
   768                           fsr1l	equ	0xFE1
   769                           bsr	equ	0xFE0
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           preinc2	equ	0xFDC
   774                           plusw2	equ	0xFDB
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_ISR in COMRAM

    _high_ISR->_writePortB

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 COMRAM     1     1      0
                          _init_Chip
                           _init_I2C
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Chip                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_ISR                                             4     4      0      45
                                              2 COMRAM     4     4      0
                         _writePortB
 ---------------------------------------------------------------------------------
 (3) _writePortB                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Chip
   _init_I2C

 _high_ISR (ROOT)
   _writePortB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      23       1       37.2%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23       6        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 03 21:56:34 2020

         writePortB@data 001D              _SSPSTATbits 000FC7                       l75 11FE  
                     l78 1240                      l800 11B6                      l802 11BA  
                    l804 11CA                      l772 11D6                      l780 123C  
                    l774 11FC                      l782 123E                      l790 11A0  
                    l776 1228                      l792 11A8                      l778 122C  
                    l794 11AC                      l796 11B0                      l798 11B2  
                    u107 11C0                      wreg 000FE8                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     i2l81 119E  
                   i2l91 10B6                     i2l96 114A                     _addr 001A  
                   _data 001B                     _main 11A0                     _sent 0023  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0024                     start 115E             ___param_bank 000000  
                  ?_main 001C                    i2l810 1036                    i2l820 105E  
                  i2l812 103A                    i2l822 106E                    i2l830 10AE  
                  i2l814 103C                    i2l806 101A                    i2l840 10FE  
                  i2l824 108E                    i2l816 104A                    i2l832 10BA  
                  i2l808 1028                    i2l842 111A                    i2l834 10CC  
                  i2l826 1090                    i2l850 1142                    i2l818 104E  
                  i2l852 1144                    i2l844 111C                    i2l836 10DC  
                  i2l828 10A2                    i2l854 1146                    i2l846 112E  
                  i2l838 10EC                    i2l784 1164                    i2l856 1148  
                  i2l848 113A                    i2l786 1168                    i2l788 1184  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _Rxbuf 0001                    _Txbuf 000C                    tablat 000FF5  
                  ttemp5 0025                    ttemp6 0028                    ttemp7 002C  
                  status 000FD8                    wtemp8 0025          __initialization 1200  
           __end_of_main 11D6                   ??_main 0022            __activetblptr 000000  
                 _ADCON1 000FC1                   _ANSELA 000F5B                   i2u1_40 1028  
                 i2u1_41 1024                   i2u2_40 1036                   i2u2_41 1032  
                 i2u3_40 104A                   i2u3_41 1046                   i2u4_40 105E  
                 i2u4_41 105A                   i2u5_40 106E                   i2u5_41 106A  
                 i2u6_40 10A2                   i2u6_41 109E                   i2u7_40 10CC  
                 i2u7_41 10C8                   _SSPADD 000FC8                   i2u8_40 10DC  
                 i2u8_41 10D8                   i2u9_40 112E                   i2u9_41 112A  
                 _SSPBUF 000FC9         __end_of_high_ISR 115E         __end_of_init_I2C 1242  
                 clear_0 1218             __pdataCOMRAM 0023                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 121E            ___rparam_used 000001           __pcstackCOMRAM 001C  
     __size_of_init_Chip 002A                  _CM1CON0 000F98                ?_high_ISR 001C  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
              ?_init_I2C 001C                  __Hparam 0000                  __Lparam 0000  
              _I2Cstatus 0017                  __pcinit 1200                  __ramtop 0800  
                __ptext0 11A0                  __ptext1 1228                  __ptext2 11D6  
                __ptext4 1162        __end_of_init_Chip 1200               ??_high_ISR 001E  
   end_of_initialization 121E               ??_init_I2C 0022                  postinc0 000FEE  
              _TRISBbits 000F93               _writePortB 1162            __pidataCOMRAM 1242  
    start_initialization 1200              __pbssCOMRAM 0001        __size_of_high_ISR 0156  
      __size_of_init_I2C 001A                _data_past 0019                __pintcode 1008  
            ?_writePortB 001C                _init_Chip 11D6                 _LATCbits 000F8B  
               _PIE1bits 000F9D                 _PIR1bits 000F9E               ?_init_Chip 001C  
    __size_of_writePortB 003E                 __Hrparam 0000                 __Lrparam 0000  
               _RxStatus 0018                 _high_ISR 1008                 _init_I2C 1228  
          __size_of_main 0036                 int$flags 0024               _INTCONbits 000FF2  
            ??_init_Chip 0022                 intlevel2 0000             ??_writePortB 001C  
            _SSPCON1bits 000FC6       __end_of_writePortB 11A0  
