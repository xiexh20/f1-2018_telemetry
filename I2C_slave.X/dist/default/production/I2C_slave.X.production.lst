

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 01 23:59:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F25K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  0010F8                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _sent
    58  0010F8  11                 	db	17
    59  0000                     _ANSELA	set	3931
    60  0000                     _SSPCON1bits	set	4038
    61  0000                     _SSPBUF	set	4041
    62  0000                     _SSPSTATbits	set	4039
    63  0000                     _PIR1bits	set	3998
    64  0000                     _LATCbits	set	3979
    65  0000                     _PIE1bits	set	3997
    66  0000                     _SSPCON2	set	4037
    67  0000                     _SSPSTAT	set	4039
    68  0000                     _SSPCON1	set	4038
    69  0000                     _SSPADD	set	4040
    70  0000                     _TRISBbits	set	3987
    71  0000                     _TRISC	set	3988
    72  0000                     _LATC	set	3979
    73  0000                     _TRISB	set	3987
    74  0000                     _CM1CON0	set	3992
    75  0000                     _ADCON1	set	4033
    76  0000                     _TRISA	set	3986
    77  0000                     _LATA	set	3977
    78  0000                     _LATB	set	3978
    79  0000                     _INTCONbits	set	4082
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84  0010BA                     __pcinit:
    85                           	opt callstack 0
    86  0010BA                     start_initialization:
    87                           	opt callstack 0
    88  0010BA                     __initialization:
    89                           	opt callstack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (1 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93  0010BA  0EF8               	movlw	low __pidataCOMRAM
    94  0010BC  6EF6               	movwf	tblptrl,c
    95  0010BE  0E10               	movlw	high __pidataCOMRAM
    96  0010C0  6EF7               	movwf	tblptrh,c
    97  0010C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98  0010C4  6EF8               	movwf	tblptru,c
    99  0010C6  0009               	tblrd		*+	;fetch initializer
   100  0010C8  CFF5 F005          	movff	tablat,__pdataCOMRAM
   101                           
   102                           ; Clear objects allocated to COMRAM (4 bytes)
   103  0010CC  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   104  0010CE  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   105  0010D0  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106  0010D2  6A01               	clrf	__pbssCOMRAM& (0+255),c
   107  0010D4                     end_of_initialization:
   108                           	opt callstack 0
   109  0010D4                     __end_of__initialization:
   110                           	opt callstack 0
   111  0010D4  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112  0010D6  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113  0010D8  0100               	movlb	0
   114  0010DA  EF31  F008         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt callstack 0
   119  000001                     _RxStatus:
   120                           	opt callstack 0
   121  000001                     	ds	1
   122  000002                     _data_past:
   123                           	opt callstack 0
   124  000002                     	ds	1
   125  000003                     _addr:
   126                           	opt callstack 0
   127  000003                     	ds	1
   128  000004                     _data:
   129                           	opt callstack 0
   130  000004                     	ds	1
   131                           
   132                           	psect	dataCOMRAM
   133  000005                     __pdataCOMRAM:
   134                           	opt callstack 0
   135  000005                     _sent:
   136                           	opt callstack 0
   137  000005                     	ds	1
   138                           
   139                           	psect	cstackCOMRAM
   140  000006                     __pcstackCOMRAM:
   141                           	opt callstack 0
   142  000006                     ??_main:
   143  000006                     
   144                           ; 1 bytes @ 0x0
   145  000006                     	ds	1
   146                           
   147 ;;
   148 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   149 ;;
   150 ;; *************** function _main *****************
   151 ;; Defined at:
   152 ;;		line 39 in file "I2C_slave.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;		None
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2, cstack
   161 ;; Tracked objects:
   162 ;;		On entry : 0/0
   163 ;;		On exit  : 0/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   166 ;;      Params:         0       0       0       0       0       0       0       0       0
   167 ;;      Locals:         0       0       0       0       0       0       0       0       0
   168 ;;      Temps:          1       0       0       0       0       0       0       0       0
   169 ;;      Totals:         1       0       0       0       0       0       0       0       0
   170 ;;Total ram usage:        1 bytes
   171 ;; Hardware stack levels required when called:    2
   172 ;; This function calls:
   173 ;;		_init_Chip
   174 ;;		_init_I2C
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181  001062                     __ptext0:
   182                           	opt callstack 0
   183  001062                     _main:
   184                           	opt callstack 29
   185  001062                     
   186                           ;I2C_slave.c: 41:     init_Chip();
   187  001062  EC48  F008         	call	_init_Chip	;wreg free
   188                           
   189                           ;I2C_slave.c: 42:     init_I2C();
   190  001066  EC6F  F008         	call	_init_I2C	;wreg free
   191  00106A                     
   192                           ;I2C_slave.c: 44:     INTCONbits.GIE = 1;
   193  00106A  8EF2               	bsf	242,7,c	;volatile
   194  00106C                     
   195                           ;I2C_slave.c: 45:     LATB = 0;
   196  00106C  0E00               	movlw	0
   197  00106E  6E8A               	movwf	138,c	;volatile
   198  001070                     
   199                           ;I2C_slave.c: 46:     LATA = 0;
   200  001070  0E00               	movlw	0
   201  001072  6E89               	movwf	137,c	;volatile
   202  001074                     l781:
   203                           
   204                           ;I2C_slave.c: 48:     {;I2C_slave.c: 50:         _delay((unsigned long)((1)*(48000000/40
      +                          00.0)));
   205  001074  0E10               	movlw	16
   206  001076  6E06               	movwf	??_main^0,c
   207  001078  0E94               	movlw	148
   208  00107A                     u47:
   209  00107A  2EE8               	decfsz	wreg,f,c
   210  00107C  D7FE               	bra	u47
   211  00107E  2E06               	decfsz	??_main^0,f,c
   212  001080  D7FC               	bra	u47
   213  001082  D000               	nop2	
   214  001084                     
   215                           ;I2C_slave.c: 57:         data_past = data;
   216  001084  C004  F002         	movff	_data,_data_past
   217  001088  EF3A  F008         	goto	l781
   218  00108C  EF2F  F008         	goto	start
   219  001090                     __end_of_main:
   220                           	opt callstack 0
   221                           
   222 ;; *************** function _init_I2C *****************
   223 ;; Defined at:
   224 ;;		line 78 in file "I2C_slave.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels used:    1
   244 ;; Hardware stack levels required when called:    1
   245 ;; This function calls:
   246 ;;		Nothing
   247 ;; This function is called by:
   248 ;;		_main
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text1
   253  0010DE                     __ptext1:
   254                           	opt callstack 0
   255  0010DE                     _init_I2C:
   256                           	opt callstack 29
   257  0010DE                     
   258                           ;I2C_slave.c: 81:     TRISBbits.TRISB0 = 1;
   259  0010DE  8093               	bsf	147,0,c	;volatile
   260                           
   261                           ;I2C_slave.c: 82:     TRISBbits.TRISB1 = 1;
   262  0010E0  8293               	bsf	147,1,c	;volatile
   263  0010E2                     
   264                           ;I2C_slave.c: 84:     SSPADD = 0x40;
   265  0010E2  0E40               	movlw	64
   266  0010E4  6EC8               	movwf	200,c	;volatile
   267                           
   268                           ;I2C_slave.c: 85:     SSPCON1 = 0x36;
   269  0010E6  0E36               	movlw	54
   270  0010E8  6EC6               	movwf	198,c	;volatile
   271                           
   272                           ;I2C_slave.c: 86:     SSPSTAT = 0x80;
   273  0010EA  0E80               	movlw	128
   274  0010EC  6EC7               	movwf	199,c	;volatile
   275                           
   276                           ;I2C_slave.c: 88:     SSPCON2 = 0x01;
   277  0010EE  0E01               	movlw	1
   278  0010F0  6EC5               	movwf	197,c	;volatile
   279  0010F2                     
   280                           ;I2C_slave.c: 91:     PIE1bits.SSPIE = 1;
   281  0010F2  869D               	bsf	157,3,c	;volatile
   282  0010F4                     
   283                           ;I2C_slave.c: 92:     INTCONbits.PEIE = 1;
   284  0010F4  8CF2               	bsf	242,6,c	;volatile
   285  0010F6  0012               	return		;funcret
   286  0010F8                     __end_of_init_I2C:
   287                           	opt callstack 0
   288                           
   289 ;; *************** function _init_Chip *****************
   290 ;; Defined at:
   291 ;;		line 63 in file "I2C_slave.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   305 ;;      Params:         0       0       0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; Hardware stack levels required when called:    1
   312 ;; This function calls:
   313 ;;		Nothing
   314 ;; This function is called by:
   315 ;;		_main
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text2
   320  001090                     __ptext2:
   321                           	opt callstack 0
   322  001090                     _init_Chip:
   323                           	opt callstack 29
   324  001090                     
   325                           ;I2C_slave.c: 65:     LATA = 0x00;
   326  001090  0E00               	movlw	0
   327  001092  6E89               	movwf	137,c	;volatile
   328                           
   329                           ;I2C_slave.c: 66:     TRISA = 0x00;
   330  001094  0E00               	movlw	0
   331  001096  6E92               	movwf	146,c	;volatile
   332                           
   333                           ;I2C_slave.c: 67:     ADCON1 = 0x00;
   334  001098  0E00               	movlw	0
   335  00109A  6EC1               	movwf	193,c	;volatile
   336                           
   337                           ;I2C_slave.c: 68:     ANSELA = 0x00;
   338  00109C  0E00               	movlw	0
   339  00109E  010F               	movlb	15	; () banked
   340  0010A0  6F5B               	movwf	91,b	;volatile
   341                           
   342                           ;I2C_slave.c: 69:     CM1CON0 = 0x00;
   343  0010A2  0E00               	movlw	0
   344  0010A4  6E98               	movwf	152,c	;volatile
   345                           
   346                           ;I2C_slave.c: 70:     LATB = 0x00;
   347  0010A6  0E00               	movlw	0
   348  0010A8  6E8A               	movwf	138,c	;volatile
   349                           
   350                           ;I2C_slave.c: 71:     TRISB = 0x00;
   351  0010AA  0E00               	movlw	0
   352  0010AC  6E93               	movwf	147,c	;volatile
   353                           
   354                           ;I2C_slave.c: 72:     LATC = 0x00;
   355  0010AE  0E00               	movlw	0
   356  0010B0  6E8B               	movwf	139,c	;volatile
   357                           
   358                           ;I2C_slave.c: 73:     TRISC = 0x00;
   359  0010B2  0E00               	movlw	0
   360  0010B4  6E94               	movwf	148,c	;volatile
   361  0010B6                     
   362                           ; BSR set to: 15
   363                           ;I2C_slave.c: 74:  INTCONbits.GIE = 0;
   364  0010B6  9EF2               	bcf	242,7,c	;volatile
   365  0010B8                     
   366                           ; BSR set to: 15
   367  0010B8  0012               	return		;funcret
   368  0010BA                     __end_of_init_Chip:
   369                           	opt callstack 0
   370                           
   371 ;; *************** function _high_ISR *****************
   372 ;; Defined at:
   373 ;;		line 106 in file "I2C_slave.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		status,2, status,0
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         0       0       0       0       0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		Interrupt level 2
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	intcode
   401  001008                     __pintcode:
   402                           	opt callstack 0
   403  001008                     _high_ISR:
   404                           	opt callstack 29
   405                           
   406                           ; BSR set to: 15
   407                           ;incstack = 0
   408  001008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   409  00100A                     
   410                           ;I2C_slave.c: 110:     if(PIR1bits.SSPIF==1){
   411  00100A  A69E               	btfss	158,3,c	;volatile
   412  00100C  EF0A  F008         	goto	i2u1_41
   413  001010  EF0C  F008         	goto	i2u1_40
   414  001014                     i2u1_41:
   415  001014  EF2D  F008         	goto	i2l85
   416  001018                     i2u1_40:
   417  001018                     
   418                           ;I2C_slave.c: 155:         if(SSPSTATbits.R_nW){
   419  001018  A4C7               	btfss	199,2,c	;volatile
   420  00101A  EF11  F008         	goto	i2u2_41
   421  00101E  EF13  F008         	goto	i2u2_40
   422  001022                     i2u2_41:
   423  001022  EF1B  F008         	goto	i2l81
   424  001026                     i2u2_40:
   425  001026                     
   426                           ;I2C_slave.c: 156:             LATCbits.LATC7 = 1;
   427  001026  8E8B               	bsf	139,7,c	;volatile
   428  001028                     
   429                           ;I2C_slave.c: 158:             data--;
   430  001028  0604               	decf	_data^0,f,c
   431  00102A                     
   432                           ;I2C_slave.c: 159:             SSPBUF = data;
   433  00102A  C004  FFC9         	movff	_data,4041	;volatile
   434  00102E                     
   435                           ;I2C_slave.c: 160:             LATA = data;
   436  00102E  C004  FF89         	movff	_data,3977	;volatile
   437                           
   438                           ;I2C_slave.c: 162:         }
   439  001032  EF1C  F008         	goto	i2l82
   440  001036                     i2l81:
   441                           
   442                           ;I2C_slave.c: 164:             LATCbits.LATC7 = 0;
   443  001036  9E8B               	bcf	139,7,c	;volatile
   444  001038                     i2l82:
   445                           
   446                           ;I2C_slave.c: 168:         if((SSPSTAT&0x20)==0){
   447  001038  BAC7               	btfsc	199,5,c	;volatile
   448  00103A  EF21  F008         	goto	i2u3_41
   449  00103E  EF23  F008         	goto	i2u3_40
   450  001042                     i2u3_41:
   451  001042  EF27  F008         	goto	i2l83
   452  001046                     i2u3_40:
   453  001046                     
   454                           ;I2C_slave.c: 170:             addr = SSPBUF;
   455  001046  CFC9 F003          	movff	4041,_addr	;volatile
   456                           
   457                           ;I2C_slave.c: 173:         }
   458  00104A  EF29  F008         	goto	i2l84
   459  00104E                     i2l83:
   460                           
   461                           ;I2C_slave.c: 177:             data = SSPBUF;
   462  00104E  CFC9 F004          	movff	4041,_data	;volatile
   463  001052                     i2l84:
   464                           
   465                           ;I2C_slave.c: 187:         SSPCON1bits.SSPOV = 0;
   466  001052  9CC6               	bcf	198,6,c	;volatile
   467                           
   468                           ;I2C_slave.c: 188:         SSPCON1bits.WCOL = 0;
   469  001054  9EC6               	bcf	198,7,c	;volatile
   470                           
   471                           ;I2C_slave.c: 190:         PIR1bits.SSPIF = 0;
   472  001056  969E               	bcf	158,3,c	;volatile
   473                           
   474                           ;I2C_slave.c: 191:         SSPCON1bits.CKP = 1;
   475  001058  88C6               	bsf	198,4,c	;volatile
   476  00105A                     i2l85:
   477  00105A  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   478  00105C  0011               	retfie		f
   479  00105E                     __end_of_high_ISR:
   480                           	opt callstack 0
   481  0000                     
   482                           	psect	rparam
   483  0000                     
   484                           	psect	temp
   485  000007                     btemp:
   486                           	opt callstack 0
   487  000007                     	ds	1
   488  0000                     int$flags	set	btemp
   489  0000                     wtemp8	set	btemp+1
   490  0000                     ttemp5	set	btemp+1
   491  0000                     ttemp6	set	btemp+4
   492  0000                     ttemp7	set	btemp+8
   493                           tosu	equ	0xFFF
   494                           tosh	equ	0xFFE
   495                           tosl	equ	0xFFD
   496                           stkptr	equ	0xFFC
   497                           pclatu	equ	0xFFB
   498                           pclath	equ	0xFFA
   499                           pcl	equ	0xFF9
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           prodh	equ	0xFF4
   505                           prodl	equ	0xFF3
   506                           indf0	equ	0xFEF
   507                           postinc0	equ	0xFEE
   508                           postdec0	equ	0xFED
   509                           preinc0	equ	0xFEC
   510                           plusw0	equ	0xFEB
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           wreg	equ	0xFE8
   514                           indf1	equ	0xFE7
   515                           postinc1	equ	0xFE6
   516                           postdec1	equ	0xFE5
   517                           preinc1	equ	0xFE4
   518                           plusw1	equ	0xFE3
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           bsr	equ	0xFE0
   522                           indf2	equ	0xFDF
   523                           postinc2	equ	0xFDE
   524                           postdec2	equ	0xFDD
   525                           preinc2	equ	0xFDC
   526                           plusw2	equ	0xFDB
   527                           fsr2h	equ	0xFDA
   528                           fsr2l	equ	0xFD9
   529                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                          _init_Chip
                           _init_I2C
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Chip                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Chip
   _init_I2C

 _high_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1       6       1        6.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6       6        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 01 23:59:02 2020

            _SSPSTATbits 000FC7                       l72 10F6                       l69 10B8  
                     u47 107A                      l761 1090                      l763 10B6  
                    l771 10F4                      l765 10DE                      l781 1074  
                    l773 1062                      l767 10E2                      l783 1084  
                    l775 106A                      l769 10F2                      l777 106C  
                    l779 1070                      wreg 000FE8                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     i2l81 1036  
                   i2l82 1038                     i2l83 104E                     i2l84 1052  
                   i2l85 105A                     _addr 0003                     _data 0004  
                   _main 1062                     _sent 0005                     btemp 0007  
                   start 105E             ___param_bank 000000                    ?_main 0006  
                  i2l801 102E                    i2l803 1046                    i2l791 100A  
                  i2l793 1018                    i2l795 1026                    i2l797 1028  
                  i2l799 102A                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    tablat 000FF5                    ttemp5 0008  
                  ttemp6 000B                    ttemp7 000F                    wtemp8 0008  
        __initialization 10BA             __end_of_main 1090                   ??_main 0006  
          __activetblptr 000000                   _ADCON1 000FC1                   _ANSELA 000F5B  
                 i2u1_40 1018                   i2u1_41 1014                   i2u2_40 1026  
                 i2u2_41 1022                   i2u3_40 1046                   i2u3_41 1042  
                 _SSPADD 000FC8                   _SSPBUF 000FC9         __end_of_high_ISR 105E  
       __end_of_init_I2C 10F8             __pdataCOMRAM 0005                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 10D4            ___rparam_used 000001           __pcstackCOMRAM 0006  
     __size_of_init_Chip 002A                  _CM1CON0 000F98                ?_high_ISR 0006  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
              ?_init_I2C 0006                  __Hparam 0000                  __Lparam 0000  
                __pcinit 10BA                  __ramtop 0800                  __ptext0 1062  
                __ptext1 10DE                  __ptext2 1090        __end_of_init_Chip 10BA  
             ??_high_ISR 0006     end_of_initialization 10D4               ??_init_I2C 0006  
              _TRISBbits 000F93            __pidataCOMRAM 10F8      start_initialization 10BA  
            __pbssCOMRAM 0001        __size_of_high_ISR 0056        __size_of_init_I2C 001A  
              _data_past 0002                __pintcode 1008                _init_Chip 1090  
               _LATCbits 000F8B                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
             ?_init_Chip 0006                 __Hrparam 0000                 __Lrparam 0000  
               _RxStatus 0001                 _high_ISR 1008                 _init_I2C 10DE  
          __size_of_main 002E                 int$flags 0007               _INTCONbits 000FF2  
            ??_init_Chip 0006                 intlevel2 0000              _SSPCON1bits 000FC6  
