

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 10 18:42:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F25K50 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  001202                     __pidataCOMRAM:
    56                           	opt callstack 0
    57                           
    58                           ;initializer for _sent
    59  001202  11                 	db	17
    60  0000                     _ANSELA	set	3931
    61  0000                     _ADRESL	set	4035
    62  0000                     _ADRESH	set	4036
    63  0000                     _SSPCON1bits	set	4038
    64  0000                     _SSPSTATbits	set	4039
    65  0000                     _SSPBUF	set	4041
    66  0000                     _PIR1bits	set	3998
    67  0000                     _ADCON2	set	4032
    68  0000                     _ADCON0	set	4034
    69  0000                     _LATCbits	set	3979
    70  0000                     _PIE1bits	set	3997
    71  0000                     _SSPCON2	set	4037
    72  0000                     _SSPSTAT	set	4039
    73  0000                     _SSPCON1	set	4038
    74  0000                     _SSPADD	set	4040
    75  0000                     _TRISBbits	set	3987
    76  0000                     _TRISC	set	3988
    77  0000                     _LATC	set	3979
    78  0000                     _TRISB	set	3987
    79  0000                     _CM1CON0	set	3992
    80  0000                     _ADCON1	set	4033
    81  0000                     _TRISA	set	3986
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _LATA	set	3977
    84  0000                     _LATB	set	3978
    85  0000                     _INTCONbits	set	4082
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90  0011B2                     __pcinit:
    91                           	opt callstack 0
    92  0011B2                     start_initialization:
    93                           	opt callstack 0
    94  0011B2                     __initialization:
    95                           	opt callstack 0
    96                           
    97                           ; Initialize objects allocated to COMRAM (1 bytes)
    98                           ; load TBLPTR registers with __pidataCOMRAM
    99  0011B2  0E02               	movlw	low __pidataCOMRAM
   100  0011B4  6EF6               	movwf	tblptrl,c
   101  0011B6  0E12               	movlw	high __pidataCOMRAM
   102  0011B8  6EF7               	movwf	tblptrh,c
   103  0011BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   104  0011BC  6EF8               	movwf	tblptru,c
   105  0011BE  0009               	tblrd		*+	;fetch initializer
   106  0011C0  CFF5 F020          	movff	tablat,__pdataCOMRAM
   107                           
   108                           ; Clear objects allocated to COMRAM (27 bytes)
   109  0011C4  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  0011C8  0E1B               	movlw	27
   111  0011CA                     clear_0:
   112  0011CA  6AEE               	clrf	postinc0,c
   113  0011CC  06E8               	decf	wreg,f,c
   114  0011CE  E1FD               	bnz	clear_0
   115  0011D0                     end_of_initialization:
   116                           	opt callstack 0
   117  0011D0                     __end_of__initialization:
   118                           	opt callstack 0
   119  0011D0  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  0011D2  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  0011D4  0100               	movlb	0
   122  0011D6  EFAC  F008         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt callstack 0
   127  000001                     _Rxbuf:
   128                           	opt callstack 0
   129  000001                     	ds	11
   130  00000C                     _Txbuf:
   131                           	opt callstack 0
   132  00000C                     	ds	11
   133  000017                     _I2Cstatus:
   134                           	opt callstack 0
   135  000017                     	ds	1
   136  000018                     _RxStatus:
   137                           	opt callstack 0
   138  000018                     	ds	1
   139  000019                     _data_past:
   140                           	opt callstack 0
   141  000019                     	ds	1
   142  00001A                     _addr:
   143                           	opt callstack 0
   144  00001A                     	ds	1
   145  00001B                     _data:
   146                           	opt callstack 0
   147  00001B                     	ds	1
   148                           
   149                           	psect	dataCOMRAM
   150  000020                     __pdataCOMRAM:
   151                           	opt callstack 0
   152  000020                     _sent:
   153                           	opt callstack 0
   154  000020                     	ds	1
   155                           
   156                           	psect	cstackCOMRAM
   157  00001C                     __pcstackCOMRAM:
   158                           	opt callstack 0
   159  00001C                     ??_high_ISR:
   160                           
   161                           ; 1 bytes @ 0x0
   162  00001C                     	ds	4
   163  000020                     
   164                           ; 1 bytes @ 0x4
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 54 in file "I2C_slave.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   184 ;;      Params:         0       0       0       0       0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0       0       0       0       0
   186 ;;      Temps:          0       0       0       0       0       0       0       0       0
   187 ;;      Totals:         0       0       0       0       0       0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_init_ADC
   192 ;;		_init_Chip
   193 ;;		_init_I2C
   194 ;; This function is called by:
   195 ;;		Startup code after reset
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	text0
   200  001158                     __ptext0:
   201                           	opt callstack 0
   202  001158                     _main:
   203                           	opt callstack 29
   204  001158                     
   205                           ;I2C_slave.c: 56:     init_Chip();
   206  001158  ECC4  F008         	call	_init_Chip	;wreg free
   207                           
   208                           ;I2C_slave.c: 57:     init_I2C();
   209  00115C  ECED  F008         	call	_init_I2C	;wreg free
   210                           
   211                           ;I2C_slave.c: 58:     init_ADC();
   212  001160  ECFA  F008         	call	_init_ADC	;wreg free
   213  001164                     
   214                           ;I2C_slave.c: 61:     Txbuf.idx = 0;
   215  001164  0E00               	movlw	0
   216  001166  6E16               	movwf	(_Txbuf+10)^0,c
   217  001168                     
   218                           ;I2C_slave.c: 62:     Rxbuf.idx = 0;
   219  001168  0E00               	movlw	0
   220  00116A  6E0B               	movwf	(_Rxbuf+10)^0,c
   221  00116C                     
   222                           ;I2C_slave.c: 64:     INTCONbits.GIE = 1;
   223  00116C  8EF2               	bsf	242,7,c	;volatile
   224  00116E                     
   225                           ;I2C_slave.c: 65:     LATB = 0;
   226  00116E  0E00               	movlw	0
   227  001170  6E8A               	movwf	138,c	;volatile
   228  001172                     
   229                           ;I2C_slave.c: 66:     LATA = 0;
   230  001172  0E00               	movlw	0
   231  001174  6E89               	movwf	137,c	;volatile
   232  001176                     l814:
   233                           
   234                           ;I2C_slave.c: 68:     {;I2C_slave.c: 69:         _delay((unsigned long)((100)*(48000000/
      +                          4000000.0)));
   235  001176  0EF0               	movlw	240
   236  001178                     u117:
   237  001178  D000               	nop2	
   238  00117A  2EE8               	decfsz	wreg,f,c
   239  00117C  D7FD               	bra	u117
   240  00117E                     
   241                           ;I2C_slave.c: 70:         ADCON0bits.GODONE = 1;
   242  00117E  82C2               	bsf	194,1,c	;volatile
   243  001180  EFBB  F008         	goto	l814
   244  001184  EFAA  F008         	goto	start
   245  001188                     __end_of_main:
   246                           	opt callstack 0
   247                           
   248 ;; *************** function _init_I2C *****************
   249 ;; Defined at:
   250 ;;		line 88 in file "I2C_slave.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;		None
   253 ;; Auto vars:     Size  Location     Type
   254 ;;		None
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, status,2
   259 ;; Tracked objects:
   260 ;;		On entry : 0/0
   261 ;;		On exit  : 0/0
   262 ;;		Unchanged: 0/0
   263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   264 ;;      Params:         0       0       0       0       0       0       0       0       0
   265 ;;      Locals:         0       0       0       0       0       0       0       0       0
   266 ;;      Temps:          0       0       0       0       0       0       0       0       0
   267 ;;      Totals:         0       0       0       0       0       0       0       0       0
   268 ;;Total ram usage:        0 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; Hardware stack levels required when called:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		_main
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	text1
   279  0011DA                     __ptext1:
   280                           	opt callstack 0
   281  0011DA                     _init_I2C:
   282                           	opt callstack 29
   283  0011DA                     
   284                           ;I2C_slave.c: 91:     TRISBbits.TRISB0 = 1;
   285  0011DA  8093               	bsf	147,0,c	;volatile
   286                           
   287                           ;I2C_slave.c: 92:     TRISBbits.TRISB1 = 1;
   288  0011DC  8293               	bsf	147,1,c	;volatile
   289  0011DE                     
   290                           ;I2C_slave.c: 94:     SSPADD = 0x30;
   291  0011DE  0E30               	movlw	48
   292  0011E0  6EC8               	movwf	200,c	;volatile
   293                           
   294                           ;I2C_slave.c: 95:     SSPCON1 = 0x36;
   295  0011E2  0E36               	movlw	54
   296  0011E4  6EC6               	movwf	198,c	;volatile
   297                           
   298                           ;I2C_slave.c: 96:     SSPSTAT = 0x80;
   299  0011E6  0E80               	movlw	128
   300  0011E8  6EC7               	movwf	199,c	;volatile
   301                           
   302                           ;I2C_slave.c: 97:     SSPCON2 = 0x01;
   303  0011EA  0E01               	movlw	1
   304  0011EC  6EC5               	movwf	197,c	;volatile
   305  0011EE                     
   306                           ;I2C_slave.c: 99:     PIE1bits.SSPIE = 1;
   307  0011EE  869D               	bsf	157,3,c	;volatile
   308  0011F0                     
   309                           ;I2C_slave.c: 100:     INTCONbits.PEIE = 1;
   310  0011F0  8CF2               	bsf	242,6,c	;volatile
   311  0011F2  0012               	return		;funcret
   312  0011F4                     __end_of_init_I2C:
   313                           	opt callstack 0
   314                           
   315 ;; *************** function _init_Chip *****************
   316 ;; Defined at:
   317 ;;		line 74 in file "I2C_slave.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   331 ;;      Params:         0       0       0       0       0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346  001188                     __ptext2:
   347                           	opt callstack 0
   348  001188                     _init_Chip:
   349                           	opt callstack 29
   350  001188                     
   351                           ;I2C_slave.c: 76:     LATA = 0x00;
   352  001188  0E00               	movlw	0
   353  00118A  6E89               	movwf	137,c	;volatile
   354                           
   355                           ;I2C_slave.c: 77:     TRISA = 0x01;
   356  00118C  0E01               	movlw	1
   357  00118E  6E92               	movwf	146,c	;volatile
   358                           
   359                           ;I2C_slave.c: 78:     ADCON1 = 0x00;
   360  001190  0E00               	movlw	0
   361  001192  6EC1               	movwf	193,c	;volatile
   362                           
   363                           ;I2C_slave.c: 79:     ANSELA = 0x00;
   364  001194  0E00               	movlw	0
   365  001196  010F               	movlb	15	; () banked
   366  001198  6F5B               	movwf	91,b	;volatile
   367                           
   368                           ;I2C_slave.c: 80:     CM1CON0 = 0x00;
   369  00119A  0E00               	movlw	0
   370  00119C  6E98               	movwf	152,c	;volatile
   371                           
   372                           ;I2C_slave.c: 81:     LATB = 0x00;
   373  00119E  0E00               	movlw	0
   374  0011A0  6E8A               	movwf	138,c	;volatile
   375                           
   376                           ;I2C_slave.c: 82:     TRISB = 0x00;
   377  0011A2  0E00               	movlw	0
   378  0011A4  6E93               	movwf	147,c	;volatile
   379                           
   380                           ;I2C_slave.c: 83:     LATC = 0x00;
   381  0011A6  0E00               	movlw	0
   382  0011A8  6E8B               	movwf	139,c	;volatile
   383                           
   384                           ;I2C_slave.c: 84:     TRISC = 0x00;
   385  0011AA  0E00               	movlw	0
   386  0011AC  6E94               	movwf	148,c	;volatile
   387  0011AE                     
   388                           ; BSR set to: 15
   389                           ;I2C_slave.c: 85:  INTCONbits.GIE = 0;
   390  0011AE  9EF2               	bcf	242,7,c	;volatile
   391  0011B0                     
   392                           ; BSR set to: 15
   393  0011B0  0012               	return		;funcret
   394  0011B2                     __end_of_init_Chip:
   395                           	opt callstack 0
   396                           
   397 ;; *************** function _init_ADC *****************
   398 ;; Defined at:
   399 ;;		line 110 in file "I2C_slave.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   413 ;;      Params:         0       0       0       0       0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    1
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text3
   428  0011F4                     __ptext3:
   429                           	opt callstack 0
   430  0011F4                     _init_ADC:
   431                           	opt callstack 29
   432  0011F4                     
   433                           ;I2C_slave.c: 112:     ADCON0 = 0x01;
   434  0011F4  0E01               	movlw	1
   435  0011F6  6EC2               	movwf	194,c	;volatile
   436                           
   437                           ;I2C_slave.c: 113:     ADCON1 = 0x00;
   438  0011F8  0E00               	movlw	0
   439  0011FA  6EC1               	movwf	193,c	;volatile
   440                           
   441                           ;I2C_slave.c: 114:     ADCON2 = 0x08;
   442  0011FC  0E08               	movlw	8
   443  0011FE  6EC0               	movwf	192,c	;volatile
   444  001200  0012               	return		;funcret
   445  001202                     __end_of_init_ADC:
   446                           	opt callstack 0
   447                           
   448 ;; *************** function _high_ISR *****************
   449 ;; Defined at:
   450 ;;		line 121 in file "I2C_slave.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   464 ;;      Params:         0       0       0       0       0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0
   466 ;;      Temps:          4       0       0       0       0       0       0       0       0
   467 ;;      Totals:         4       0       0       0       0       0       0       0       0
   468 ;;Total ram usage:        4 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		Interrupt level 2
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	intcode
   478  001008                     __pintcode:
   479                           	opt callstack 0
   480  001008                     _high_ISR:
   481                           	opt callstack 29
   482                           
   483                           ;incstack = 0
   484  001008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   485  00100A  CFE1 F01C          	movff	fsr1l,??_high_ISR
   486  00100E  CFE2 F01D          	movff	fsr1h,??_high_ISR+1
   487  001012  CFD9 F01E          	movff	fsr2l,??_high_ISR+2
   488  001016  CFDA F01F          	movff	fsr2h,??_high_ISR+3
   489  00101A                     
   490                           ;I2C_slave.c: 123:     if(PIR1bits.SSPIF==1){
   491  00101A  A69E               	btfss	158,3,c	;volatile
   492  00101C  EF12  F008         	goto	i2u1_41
   493  001020  EF14  F008         	goto	i2u1_40
   494  001024                     i2u1_41:
   495  001024  EF94  F008         	goto	i2l874
   496  001028                     i2u1_40:
   497  001028                     
   498                           ;I2C_slave.c: 126:         if((SSPSTAT&0x20)==0){
   499  001028  BAC7               	btfsc	199,5,c	;volatile
   500  00102A  EF19  F008         	goto	i2u2_41
   501  00102E  EF1B  F008         	goto	i2u2_40
   502  001032                     i2u2_41:
   503  001032  EF55  F008         	goto	i2l850
   504  001036                     i2u2_40:
   505  001036                     
   506                           ;I2C_slave.c: 128:             addr = SSPBUF;
   507  001036  CFC9 F01A          	movff	4041,_addr	;volatile
   508  00103A                     
   509                           ;I2C_slave.c: 129:             LATCbits.LATC7 ^= 1;
   510  00103A  7E8B               	btg	139,7,c	;volatile
   511  00103C                     
   512                           ;I2C_slave.c: 132:             if(SSPSTATbits.R_nW){
   513  00103C  A4C7               	btfss	199,2,c	;volatile
   514  00103E  EF23  F008         	goto	i2u3_41
   515  001042  EF25  F008         	goto	i2u3_40
   516  001046                     i2u3_41:
   517  001046  EF4F  F008         	goto	i2l848
   518  00104A                     i2u3_40:
   519  00104A                     
   520                           ;I2C_slave.c: 133:                 I2Cstatus = 1;
   521  00104A  0E01               	movlw	1
   522  00104C  6E17               	movwf	_I2Cstatus^0,c
   523  00104E                     
   524                           ;I2C_slave.c: 135:                 if((I2Cstatus==1)&&(Txbuf.idx<10))
   525  00104E  0417               	decf	_I2Cstatus^0,w,c
   526  001050  A4D8               	btfss	status,2,c
   527  001052  EF2D  F008         	goto	i2u4_41
   528  001056  EF2F  F008         	goto	i2u4_40
   529  00105A                     i2u4_41:
   530  00105A  EF90  F008         	goto	i2l866
   531  00105E                     i2u4_40:
   532  00105E  0E0A               	movlw	10
   533  001060  6016               	cpfslt	(_Txbuf+10)^0,c
   534  001062  EF35  F008         	goto	i2u5_41
   535  001066  EF37  F008         	goto	i2u5_40
   536  00106A                     i2u5_41:
   537  00106A  EF90  F008         	goto	i2l866
   538  00106E                     i2u5_40:
   539  00106E                     
   540                           ;I2C_slave.c: 136:                 {;I2C_slave.c: 137:                     SSPBUF = Txbu
      +                          f.data[Txbuf.idx];
   541  00106E  0E0C               	movlw	low _Txbuf
   542  001070  2416               	addwf	(_Txbuf+10)^0,w,c
   543  001072  6ED9               	movwf	fsr2l,c
   544  001074  6ADA               	clrf	fsr2h,c
   545  001076  0E00               	movlw	high _Txbuf
   546  001078  22DA               	addwfc	fsr2h,f,c
   547  00107A  50DF               	movf	indf2,w,c
   548  00107C  6EC9               	movwf	201,c	;volatile
   549  00107E                     
   550                           ;I2C_slave.c: 139:                     Txbuf.idx++;
   551  00107E  2A16               	incf	(_Txbuf+10)^0,f,c
   552  001080                     
   553                           ;I2C_slave.c: 140:                     if(Txbuf.idx==10){
   554  001080  0E0A               	movlw	10
   555  001082  1816               	xorwf	(_Txbuf+10)^0,w,c
   556  001084  A4D8               	btfss	status,2,c
   557  001086  EF47  F008         	goto	i2u6_41
   558  00108A  EF49  F008         	goto	i2u6_40
   559  00108E                     i2u6_41:
   560  00108E  EF53  F008         	goto	i2l106
   561  001092                     i2u6_40:
   562  001092                     
   563                           ;I2C_slave.c: 142:                         I2Cstatus = 0;
   564  001092  0E00               	movlw	0
   565  001094  6E17               	movwf	_I2Cstatus^0,c
   566                           
   567                           ;I2C_slave.c: 143:                         Txbuf.idx = 0;
   568  001096  0E00               	movlw	0
   569  001098  6E16               	movwf	(_Txbuf+10)^0,c
   570  00109A  EF90  F008         	goto	i2l866
   571  00109E                     i2l848:
   572                           
   573                           ;I2C_slave.c: 149:                 I2Cstatus = 2;
   574  00109E  0E02               	movlw	2
   575  0010A0  6E17               	movwf	_I2Cstatus^0,c
   576  0010A2  EF90  F008         	goto	i2l866
   577  0010A6                     i2l106:
   578                           
   579                           ;I2C_slave.c: 152:         }
   580  0010A6  EF90  F008         	goto	i2l866
   581  0010AA                     i2l850:
   582                           
   583                           ;I2C_slave.c: 155:             if((I2Cstatus==2)&&(Rxbuf.idx<10)){
   584  0010AA  0E02               	movlw	2
   585  0010AC  1817               	xorwf	_I2Cstatus^0,w,c
   586  0010AE  A4D8               	btfss	status,2,c
   587  0010B0  EF5C  F008         	goto	i2u7_41
   588  0010B4  EF5E  F008         	goto	i2u7_40
   589  0010B8                     i2u7_41:
   590  0010B8  EF8C  F008         	goto	i2l864
   591  0010BC                     i2u7_40:
   592  0010BC  0E0A               	movlw	10
   593  0010BE  600B               	cpfslt	(_Rxbuf+10)^0,c
   594  0010C0  EF64  F008         	goto	i2u8_41
   595  0010C4  EF66  F008         	goto	i2u8_40
   596  0010C8                     i2u8_41:
   597  0010C8  EF8C  F008         	goto	i2l864
   598  0010CC                     i2u8_40:
   599  0010CC                     
   600                           ;I2C_slave.c: 156:                 Rxbuf.data[Rxbuf.idx] = SSPBUF;
   601  0010CC  0E01               	movlw	low _Rxbuf
   602  0010CE  240B               	addwf	(_Rxbuf+10)^0,w,c
   603  0010D0  6ED9               	movwf	fsr2l,c
   604  0010D2  6ADA               	clrf	fsr2h,c
   605  0010D4  0E00               	movlw	high _Rxbuf
   606  0010D6  22DA               	addwfc	fsr2h,f,c
   607  0010D8  CFC9 FFDF          	movff	4041,indf2	;volatile
   608  0010DC                     
   609                           ;I2C_slave.c: 158:                 Txbuf.data[Rxbuf.idx] = Rxbuf.data[Rxbuf.idx];
   610  0010DC  0E01               	movlw	low _Rxbuf
   611  0010DE  240B               	addwf	(_Rxbuf+10)^0,w,c
   612  0010E0  6ED9               	movwf	fsr2l,c
   613  0010E2  6ADA               	clrf	fsr2h,c
   614  0010E4  0E00               	movlw	high _Rxbuf
   615  0010E6  22DA               	addwfc	fsr2h,f,c
   616  0010E8  0E0C               	movlw	low _Txbuf
   617  0010EA  240B               	addwf	(_Rxbuf+10)^0,w,c
   618  0010EC  6EE1               	movwf	fsr1l,c
   619  0010EE  6AE2               	clrf	fsr1h,c
   620  0010F0  0E00               	movlw	high _Txbuf
   621  0010F2  22E2               	addwfc	fsr1h,f,c
   622  0010F4  CFDF FFE7          	movff	indf2,indf1
   623  0010F8                     
   624                           ;I2C_slave.c: 159:                 Rxbuf.idx++;
   625  0010F8  2A0B               	incf	(_Rxbuf+10)^0,f,c
   626  0010FA                     
   627                           ;I2C_slave.c: 160:                 if(Rxbuf.idx==10){
   628  0010FA  0E0A               	movlw	10
   629  0010FC  180B               	xorwf	(_Rxbuf+10)^0,w,c
   630  0010FE  A4D8               	btfss	status,2,c
   631  001100  EF84  F008         	goto	i2u9_41
   632  001104  EF86  F008         	goto	i2u9_40
   633  001108                     i2u9_41:
   634  001108  EF90  F008         	goto	i2l866
   635  00110C                     i2u9_40:
   636  00110C                     
   637                           ;I2C_slave.c: 161:                     Rxbuf.idx = 0;
   638  00110C  0E00               	movlw	0
   639  00110E  6E0B               	movwf	(_Rxbuf+10)^0,c
   640                           
   641                           ;I2C_slave.c: 162:                     I2Cstatus = 0;
   642  001110  0E00               	movlw	0
   643  001112  6E17               	movwf	_I2Cstatus^0,c
   644  001114  EF90  F008         	goto	i2l866
   645  001118                     i2l864:
   646                           
   647                           ;I2C_slave.c: 166:                 I2Cstatus = 0;
   648  001118  0E00               	movlw	0
   649  00111A  6E17               	movwf	_I2Cstatus^0,c
   650                           
   651                           ;I2C_slave.c: 167:                 Rxbuf.idx = 0;
   652  00111C  0E00               	movlw	0
   653  00111E  6E0B               	movwf	(_Rxbuf+10)^0,c
   654  001120                     i2l866:
   655                           
   656                           ;I2C_slave.c: 171:         SSPCON1bits.SSPOV = 0;
   657  001120  9CC6               	bcf	198,6,c	;volatile
   658  001122                     
   659                           ;I2C_slave.c: 172:         SSPCON1bits.WCOL = 0;
   660  001122  9EC6               	bcf	198,7,c	;volatile
   661  001124                     
   662                           ;I2C_slave.c: 173:         PIR1bits.SSPIF = 0;
   663  001124  969E               	bcf	158,3,c	;volatile
   664  001126                     
   665                           ;I2C_slave.c: 174:         SSPCON1bits.CKP = 1;
   666  001126  88C6               	bsf	198,4,c	;volatile
   667  001128                     i2l874:
   668                           
   669                           ;I2C_slave.c: 177:     if(PIR1bits.ADIF==1){
   670  001128  AC9E               	btfss	158,6,c	;volatile
   671  00112A  EF99  F008         	goto	i2u10_41
   672  00112E  EF9B  F008         	goto	i2u10_40
   673  001132                     i2u10_41:
   674  001132  EFA0  F008         	goto	i2l112
   675  001136                     i2u10_40:
   676  001136                     
   677                           ;I2C_slave.c: 179:         PIR1bits.ADIF = 0;
   678  001136  9C9E               	bcf	158,6,c	;volatile
   679                           
   680                           ;I2C_slave.c: 180:         Txbuf.data[0] = ADRESH;
   681  001138  CFC4 F00C          	movff	4036,_Txbuf	;volatile
   682                           
   683                           ;I2C_slave.c: 181:         Txbuf.data[1] = ADRESL;
   684  00113C  CFC3 F00D          	movff	4035,_Txbuf+1	;volatile
   685  001140                     i2l112:
   686  001140  C01F  FFDA         	movff	??_high_ISR+3,fsr2h
   687  001144  C01E  FFD9         	movff	??_high_ISR+2,fsr2l
   688  001148  C01D  FFE2         	movff	??_high_ISR+1,fsr1h
   689  00114C  C01C  FFE1         	movff	??_high_ISR,fsr1l
   690  001150  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   691  001152  0011               	retfie		f
   692  001154                     __end_of_high_ISR:
   693                           	opt callstack 0
   694  0000                     
   695                           	psect	rparam
   696  0000                     
   697                           	psect	temp
   698  000021                     btemp:
   699                           	opt callstack 0
   700  000021                     	ds	1
   701  0000                     int$flags	set	btemp
   702  0000                     wtemp8	set	btemp+1
   703  0000                     ttemp5	set	btemp+1
   704  0000                     ttemp6	set	btemp+4
   705  0000                     ttemp7	set	btemp+8
   706                           tosu	equ	0xFFF
   707                           tosh	equ	0xFFE
   708                           tosl	equ	0xFFD
   709                           stkptr	equ	0xFFC
   710                           pclatu	equ	0xFFB
   711                           pclath	equ	0xFFA
   712                           pcl	equ	0xFF9
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           indf0	equ	0xFEF
   720                           postinc0	equ	0xFEE
   721                           postdec0	equ	0xFED
   722                           preinc0	equ	0xFEC
   723                           plusw0	equ	0xFEB
   724                           fsr0h	equ	0xFEA
   725                           fsr0l	equ	0xFE9
   726                           wreg	equ	0xFE8
   727                           indf1	equ	0xFE7
   728                           postinc1	equ	0xFE6
   729                           postdec1	equ	0xFE5
   730                           preinc1	equ	0xFE4
   731                           plusw1	equ	0xFE3
   732                           fsr1h	equ	0xFE2
   733                           fsr1l	equ	0xFE1
   734                           bsr	equ	0xFE0
   735                           indf2	equ	0xFDF
   736                           postinc2	equ	0xFDE
   737                           postdec2	equ	0xFDD
   738                           preinc2	equ	0xFDC
   739                           plusw2	equ	0xFDB
   740                           fsr2h	equ	0xFDA
   741                           fsr2l	equ	0xFD9
   742                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _init_ADC
                          _init_Chip
                           _init_I2C
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Chip                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_ISR                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_ADC
   _init_Chip
   _init_I2C

 _high_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4      20       1       34.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       6        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 10 18:42:39 2020

            _SSPSTATbits 000FC7                       l90 11F2                       l87 11B0  
                     l96 1200                      l800 11F4                      l810 116E  
                    l802 1158                      l812 1172                      l804 1164  
                    l814 1176                      l806 1168                      l816 117E  
                    l808 116C                      l790 11AE                      l792 11DA  
                    l794 11DE                      l788 1188                      l796 11EE  
                    l798 11F0                      u117 1178                      wreg 000FE8  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _addr 001A                     _data 001B                     _main 1158  
                   _sent 0020                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0021                     start 1154  
           ___param_bank 000000                    ?_main 001C                    i2l112 1140  
                  i2l106 10A6                    i2l830 103A                    i2l840 106E  
                  i2l832 103C                    i2l824 101A                    i2l842 107E  
                  i2l834 104A                    i2l850 10AA                    i2l826 1028  
                  i2l860 10FA                    i2l852 10BC                    i2l844 1080  
                  i2l836 104E                    i2l828 1036                    i2l870 1124  
                  i2l862 110C                    i2l854 10CC                    i2l846 1092  
                  i2l838 105E                    i2l872 1126                    i2l856 10DC  
                  i2l864 1118                    i2l848 109E                    i2l858 10F8  
                  i2l866 1120                    i2l874 1128                    i2l876 1136  
                  i2l868 1122                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _Rxbuf 0001                    _Txbuf 000C  
                  tablat 000FF5                    ttemp5 0022                    ttemp6 0025  
                  ttemp7 0029                    status 000FD8                    wtemp8 0022  
        __initialization 11B2             __end_of_main 1188                   ??_main 0020  
          __activetblptr 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELA 000F5B                   i2u1_40 1028                   i2u1_41 1024  
                 i2u2_40 1036                   i2u2_41 1032                   i2u3_40 104A  
                 i2u3_41 1046                   i2u4_40 105E                   i2u4_41 105A  
                 i2u5_40 106E                   i2u5_41 106A                   i2u6_40 1092  
                 i2u6_41 108E                   i2u7_40 10BC                   i2u7_41 10B8  
                 _SSPADD 000FC8                   i2u8_40 10CC                   i2u8_41 10C8  
                 i2u9_40 110C                   i2u9_41 1108                   _SSPBUF 000FC9  
       __end_of_high_ISR 1154         __end_of_init_I2C 11F4         __end_of_init_ADC 1202  
                 clear_0 11CA             __pdataCOMRAM 0020                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 11D0            ___rparam_used 000001           __pcstackCOMRAM 001C  
     __size_of_init_Chip 002A                  _CM1CON0 000F98                  i2u10_40 1136  
                i2u10_41 1132                ?_high_ISR 001C                  _SSPCON1 000FC6  
                _SSPCON2 000FC5                  _SSPSTAT 000FC7                ?_init_I2C 001C  
              ?_init_ADC 001C                  __Hparam 0000                  __Lparam 0000  
              _I2Cstatus 0017                  __pcinit 11B2                  __ramtop 0800  
                __ptext0 1158                  __ptext1 11DA                  __ptext2 1188  
                __ptext3 11F4        __end_of_init_Chip 11B2               ??_high_ISR 001C  
   end_of_initialization 11D0               ??_init_I2C 0020               ??_init_ADC 0020  
                postinc0 000FEE                _TRISBbits 000F93            __pidataCOMRAM 1202  
    start_initialization 11B2              __pbssCOMRAM 0001        __size_of_high_ISR 014C  
      __size_of_init_I2C 001A        __size_of_init_ADC 000E                _data_past 0019  
              __pintcode 1008                _init_Chip 1188                 _LATCbits 000F8B  
               _PIE1bits 000F9D                 _PIR1bits 000F9E               _ADCON0bits 000FC2  
             ?_init_Chip 001C                 __Hrparam 0000                 __Lrparam 0000  
               _RxStatus 0018                 _high_ISR 1008                 _init_I2C 11DA  
               _init_ADC 11F4            __size_of_main 0030                 int$flags 0021  
             _INTCONbits 000FF2              ??_init_Chip 0020                 intlevel2 0000  
            _SSPCON1bits 000FC6  
